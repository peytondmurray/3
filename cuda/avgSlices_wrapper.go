package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import(
	"unsafe"
	"github.com/mumax/3/cuda/cu"
	"github.com/mumax/3/timer"
	"sync"
)

// CUDA handle for avgSlices kernel
var avgSlices_code cu.Function

// Stores the arguments for avgSlices kernel invocation
type avgSlices_args_t struct{
	 arg_dst unsafe.Pointer
	 arg_src1 unsafe.Pointer
	 arg_src2 unsafe.Pointer
	 arg_Nx int
	 arg_Ny int
	 arg_Nz int
	 argptr [6]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for avgSlices kernel invocation
var avgSlices_args avgSlices_args_t

func init(){
	// CUDA driver kernel call wants pointers to arguments, set them up once.
	 avgSlices_args.argptr[0] = unsafe.Pointer(&avgSlices_args.arg_dst)
	 avgSlices_args.argptr[1] = unsafe.Pointer(&avgSlices_args.arg_src1)
	 avgSlices_args.argptr[2] = unsafe.Pointer(&avgSlices_args.arg_src2)
	 avgSlices_args.argptr[3] = unsafe.Pointer(&avgSlices_args.arg_Nx)
	 avgSlices_args.argptr[4] = unsafe.Pointer(&avgSlices_args.arg_Ny)
	 avgSlices_args.argptr[5] = unsafe.Pointer(&avgSlices_args.arg_Nz)
	 }

// Wrapper for avgSlices CUDA kernel, asynchronous.
func k_avgSlices_async ( dst unsafe.Pointer, src1 unsafe.Pointer, src2 unsafe.Pointer, Nx int, Ny int, Nz int,  cfg *config) {
	if Synchronous{ // debug
		Sync()
		timer.Start("avgSlices")
	}

	avgSlices_args.Lock()
	defer avgSlices_args.Unlock()

	if avgSlices_code == 0{
		avgSlices_code = fatbinLoad(avgSlices_map, "avgSlices")
	}

	 avgSlices_args.arg_dst = dst
	 avgSlices_args.arg_src1 = src1
	 avgSlices_args.arg_src2 = src2
	 avgSlices_args.arg_Nx = Nx
	 avgSlices_args.arg_Ny = Ny
	 avgSlices_args.arg_Nz = Nz
	

	args := avgSlices_args.argptr[:]
	cu.LaunchKernel(avgSlices_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, stream0, args)

	if Synchronous{ // debug
		Sync()
		timer.Stop("avgSlices")
	}
}

// maps compute capability on PTX code for avgSlices kernel.
var avgSlices_map = map[int]string{ 0: "" ,
30: avgSlices_ptx_30 ,
35: avgSlices_ptx_35 ,
37: avgSlices_ptx_37 ,
50: avgSlices_ptx_50 ,
52: avgSlices_ptx_52 ,
53: avgSlices_ptx_53 ,
60: avgSlices_ptx_60 ,
61: avgSlices_ptx_61 ,
70: avgSlices_ptx_70 ,
75: avgSlices_ptx_75  }

// avgSlices PTX code for various compute capabilities.
const(
  avgSlices_ptx_30 = `
.version 6.4
.target sm_30
.address_size 64

	// .globl	avgSlices

.visible .entry avgSlices(
	.param .u64 avgSlices_param_0,
	.param .u64 avgSlices_param_1,
	.param .u64 avgSlices_param_2,
	.param .u32 avgSlices_param_3,
	.param .u32 avgSlices_param_4,
	.param .u32 avgSlices_param_5
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [avgSlices_param_0];
	ld.param.u64 	%rd2, [avgSlices_param_1];
	ld.param.u64 	%rd3, [avgSlices_param_2];
	ld.param.u32 	%r4, [avgSlices_param_3];
	ld.param.u32 	%r5, [avgSlices_param_4];
	ld.param.u32 	%r6, [avgSlices_param_5];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r10, %r11, %r12;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %tid.z;
	mad.lo.s32 	%r3, %r13, %r14, %r15;
	setp.ge.s32	%p1, %r2, %r5;
	setp.ge.s32	%p2, %r1, %r4;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r6;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mad.lo.s32 	%r16, %r3, %r5, %r2;
	mad.lo.s32 	%r17, %r16, %r4, %r1;
	mul.wide.s32 	%rd5, %r17, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	mul.f32 	%f4, %f3, 0f3F000000;
	cvta.to.global.u64 	%rd9, %rd1;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f4;

BB0_2:
	ret;
}


`
   avgSlices_ptx_35 = `
.version 6.4
.target sm_35
.address_size 64

	// .globl	avgSlices

.visible .entry avgSlices(
	.param .u64 avgSlices_param_0,
	.param .u64 avgSlices_param_1,
	.param .u64 avgSlices_param_2,
	.param .u32 avgSlices_param_3,
	.param .u32 avgSlices_param_4,
	.param .u32 avgSlices_param_5
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [avgSlices_param_0];
	ld.param.u64 	%rd2, [avgSlices_param_1];
	ld.param.u64 	%rd3, [avgSlices_param_2];
	ld.param.u32 	%r4, [avgSlices_param_3];
	ld.param.u32 	%r5, [avgSlices_param_4];
	ld.param.u32 	%r6, [avgSlices_param_5];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r10, %r11, %r12;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %tid.z;
	mad.lo.s32 	%r3, %r13, %r14, %r15;
	setp.ge.s32	%p1, %r2, %r5;
	setp.ge.s32	%p2, %r1, %r4;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r6;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mad.lo.s32 	%r16, %r3, %r5, %r2;
	mad.lo.s32 	%r17, %r16, %r4, %r1;
	mul.wide.s32 	%rd5, %r17, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.nc.f32 	%f1, [%rd8];
	ld.global.nc.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	mul.f32 	%f4, %f3, 0f3F000000;
	cvta.to.global.u64 	%rd9, %rd1;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f4;

BB0_2:
	ret;
}


`
   avgSlices_ptx_37 = `
.version 6.4
.target sm_37
.address_size 64

	// .globl	avgSlices

.visible .entry avgSlices(
	.param .u64 avgSlices_param_0,
	.param .u64 avgSlices_param_1,
	.param .u64 avgSlices_param_2,
	.param .u32 avgSlices_param_3,
	.param .u32 avgSlices_param_4,
	.param .u32 avgSlices_param_5
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [avgSlices_param_0];
	ld.param.u64 	%rd2, [avgSlices_param_1];
	ld.param.u64 	%rd3, [avgSlices_param_2];
	ld.param.u32 	%r4, [avgSlices_param_3];
	ld.param.u32 	%r5, [avgSlices_param_4];
	ld.param.u32 	%r6, [avgSlices_param_5];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r10, %r11, %r12;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %tid.z;
	mad.lo.s32 	%r3, %r13, %r14, %r15;
	setp.ge.s32	%p1, %r2, %r5;
	setp.ge.s32	%p2, %r1, %r4;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r6;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mad.lo.s32 	%r16, %r3, %r5, %r2;
	mad.lo.s32 	%r17, %r16, %r4, %r1;
	mul.wide.s32 	%rd5, %r17, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.nc.f32 	%f1, [%rd8];
	ld.global.nc.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	mul.f32 	%f4, %f3, 0f3F000000;
	cvta.to.global.u64 	%rd9, %rd1;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f4;

BB0_2:
	ret;
}


`
   avgSlices_ptx_50 = `
.version 6.4
.target sm_50
.address_size 64

	// .globl	avgSlices

.visible .entry avgSlices(
	.param .u64 avgSlices_param_0,
	.param .u64 avgSlices_param_1,
	.param .u64 avgSlices_param_2,
	.param .u32 avgSlices_param_3,
	.param .u32 avgSlices_param_4,
	.param .u32 avgSlices_param_5
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [avgSlices_param_0];
	ld.param.u64 	%rd2, [avgSlices_param_1];
	ld.param.u64 	%rd3, [avgSlices_param_2];
	ld.param.u32 	%r4, [avgSlices_param_3];
	ld.param.u32 	%r5, [avgSlices_param_4];
	ld.param.u32 	%r6, [avgSlices_param_5];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r10, %r11, %r12;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %tid.z;
	mad.lo.s32 	%r3, %r13, %r14, %r15;
	setp.ge.s32	%p1, %r2, %r5;
	setp.ge.s32	%p2, %r1, %r4;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r6;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mad.lo.s32 	%r16, %r3, %r5, %r2;
	mad.lo.s32 	%r17, %r16, %r4, %r1;
	mul.wide.s32 	%rd5, %r17, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.nc.f32 	%f1, [%rd8];
	ld.global.nc.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	mul.f32 	%f4, %f3, 0f3F000000;
	cvta.to.global.u64 	%rd9, %rd1;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f4;

BB0_2:
	ret;
}


`
   avgSlices_ptx_52 = `
.version 6.4
.target sm_52
.address_size 64

	// .globl	avgSlices

.visible .entry avgSlices(
	.param .u64 avgSlices_param_0,
	.param .u64 avgSlices_param_1,
	.param .u64 avgSlices_param_2,
	.param .u32 avgSlices_param_3,
	.param .u32 avgSlices_param_4,
	.param .u32 avgSlices_param_5
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [avgSlices_param_0];
	ld.param.u64 	%rd2, [avgSlices_param_1];
	ld.param.u64 	%rd3, [avgSlices_param_2];
	ld.param.u32 	%r4, [avgSlices_param_3];
	ld.param.u32 	%r5, [avgSlices_param_4];
	ld.param.u32 	%r6, [avgSlices_param_5];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r10, %r11, %r12;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %tid.z;
	mad.lo.s32 	%r3, %r13, %r14, %r15;
	setp.ge.s32	%p1, %r2, %r5;
	setp.ge.s32	%p2, %r1, %r4;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r6;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mad.lo.s32 	%r16, %r3, %r5, %r2;
	mad.lo.s32 	%r17, %r16, %r4, %r1;
	mul.wide.s32 	%rd5, %r17, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.nc.f32 	%f1, [%rd8];
	ld.global.nc.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	mul.f32 	%f4, %f3, 0f3F000000;
	cvta.to.global.u64 	%rd9, %rd1;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f4;

BB0_2:
	ret;
}


`
   avgSlices_ptx_53 = `
.version 6.4
.target sm_53
.address_size 64

	// .globl	avgSlices

.visible .entry avgSlices(
	.param .u64 avgSlices_param_0,
	.param .u64 avgSlices_param_1,
	.param .u64 avgSlices_param_2,
	.param .u32 avgSlices_param_3,
	.param .u32 avgSlices_param_4,
	.param .u32 avgSlices_param_5
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [avgSlices_param_0];
	ld.param.u64 	%rd2, [avgSlices_param_1];
	ld.param.u64 	%rd3, [avgSlices_param_2];
	ld.param.u32 	%r4, [avgSlices_param_3];
	ld.param.u32 	%r5, [avgSlices_param_4];
	ld.param.u32 	%r6, [avgSlices_param_5];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r10, %r11, %r12;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %tid.z;
	mad.lo.s32 	%r3, %r13, %r14, %r15;
	setp.ge.s32	%p1, %r2, %r5;
	setp.ge.s32	%p2, %r1, %r4;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r6;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mad.lo.s32 	%r16, %r3, %r5, %r2;
	mad.lo.s32 	%r17, %r16, %r4, %r1;
	mul.wide.s32 	%rd5, %r17, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.nc.f32 	%f1, [%rd8];
	ld.global.nc.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	mul.f32 	%f4, %f3, 0f3F000000;
	cvta.to.global.u64 	%rd9, %rd1;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f4;

BB0_2:
	ret;
}


`
   avgSlices_ptx_60 = `
.version 6.4
.target sm_60
.address_size 64

	// .globl	avgSlices

.visible .entry avgSlices(
	.param .u64 avgSlices_param_0,
	.param .u64 avgSlices_param_1,
	.param .u64 avgSlices_param_2,
	.param .u32 avgSlices_param_3,
	.param .u32 avgSlices_param_4,
	.param .u32 avgSlices_param_5
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [avgSlices_param_0];
	ld.param.u64 	%rd2, [avgSlices_param_1];
	ld.param.u64 	%rd3, [avgSlices_param_2];
	ld.param.u32 	%r4, [avgSlices_param_3];
	ld.param.u32 	%r5, [avgSlices_param_4];
	ld.param.u32 	%r6, [avgSlices_param_5];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r10, %r11, %r12;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %tid.z;
	mad.lo.s32 	%r3, %r13, %r14, %r15;
	setp.ge.s32	%p1, %r2, %r5;
	setp.ge.s32	%p2, %r1, %r4;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r6;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mad.lo.s32 	%r16, %r3, %r5, %r2;
	mad.lo.s32 	%r17, %r16, %r4, %r1;
	mul.wide.s32 	%rd5, %r17, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.nc.f32 	%f1, [%rd8];
	ld.global.nc.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	mul.f32 	%f4, %f3, 0f3F000000;
	cvta.to.global.u64 	%rd9, %rd1;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f4;

BB0_2:
	ret;
}


`
   avgSlices_ptx_61 = `
.version 6.4
.target sm_61
.address_size 64

	// .globl	avgSlices

.visible .entry avgSlices(
	.param .u64 avgSlices_param_0,
	.param .u64 avgSlices_param_1,
	.param .u64 avgSlices_param_2,
	.param .u32 avgSlices_param_3,
	.param .u32 avgSlices_param_4,
	.param .u32 avgSlices_param_5
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [avgSlices_param_0];
	ld.param.u64 	%rd2, [avgSlices_param_1];
	ld.param.u64 	%rd3, [avgSlices_param_2];
	ld.param.u32 	%r4, [avgSlices_param_3];
	ld.param.u32 	%r5, [avgSlices_param_4];
	ld.param.u32 	%r6, [avgSlices_param_5];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r10, %r11, %r12;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %tid.z;
	mad.lo.s32 	%r3, %r13, %r14, %r15;
	setp.ge.s32	%p1, %r2, %r5;
	setp.ge.s32	%p2, %r1, %r4;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r6;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mad.lo.s32 	%r16, %r3, %r5, %r2;
	mad.lo.s32 	%r17, %r16, %r4, %r1;
	mul.wide.s32 	%rd5, %r17, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.nc.f32 	%f1, [%rd8];
	ld.global.nc.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	mul.f32 	%f4, %f3, 0f3F000000;
	cvta.to.global.u64 	%rd9, %rd1;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f4;

BB0_2:
	ret;
}


`
   avgSlices_ptx_70 = `
.version 6.4
.target sm_70
.address_size 64

	// .globl	avgSlices

.visible .entry avgSlices(
	.param .u64 avgSlices_param_0,
	.param .u64 avgSlices_param_1,
	.param .u64 avgSlices_param_2,
	.param .u32 avgSlices_param_3,
	.param .u32 avgSlices_param_4,
	.param .u32 avgSlices_param_5
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [avgSlices_param_0];
	ld.param.u64 	%rd2, [avgSlices_param_1];
	ld.param.u64 	%rd3, [avgSlices_param_2];
	ld.param.u32 	%r4, [avgSlices_param_3];
	ld.param.u32 	%r5, [avgSlices_param_4];
	ld.param.u32 	%r6, [avgSlices_param_5];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r10, %r11, %r12;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %tid.z;
	mad.lo.s32 	%r3, %r13, %r14, %r15;
	setp.ge.s32	%p1, %r2, %r5;
	setp.ge.s32	%p2, %r1, %r4;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r6;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mad.lo.s32 	%r16, %r3, %r5, %r2;
	mad.lo.s32 	%r17, %r16, %r4, %r1;
	mul.wide.s32 	%rd5, %r17, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.nc.f32 	%f1, [%rd8];
	ld.global.nc.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	mul.f32 	%f4, %f3, 0f3F000000;
	cvta.to.global.u64 	%rd9, %rd1;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f4;

BB0_2:
	ret;
}


`
   avgSlices_ptx_75 = `
.version 6.4
.target sm_75
.address_size 64

	// .globl	avgSlices

.visible .entry avgSlices(
	.param .u64 avgSlices_param_0,
	.param .u64 avgSlices_param_1,
	.param .u64 avgSlices_param_2,
	.param .u32 avgSlices_param_3,
	.param .u32 avgSlices_param_4,
	.param .u32 avgSlices_param_5
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [avgSlices_param_0];
	ld.param.u64 	%rd2, [avgSlices_param_1];
	ld.param.u64 	%rd3, [avgSlices_param_2];
	ld.param.u32 	%r4, [avgSlices_param_3];
	ld.param.u32 	%r5, [avgSlices_param_4];
	ld.param.u32 	%r6, [avgSlices_param_5];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r10, %r11, %r12;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %tid.z;
	mad.lo.s32 	%r3, %r13, %r14, %r15;
	setp.ge.s32	%p1, %r2, %r5;
	setp.ge.s32	%p2, %r1, %r4;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r6;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mad.lo.s32 	%r16, %r3, %r5, %r2;
	mad.lo.s32 	%r17, %r16, %r4, %r1;
	mul.wide.s32 	%rd5, %r17, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.nc.f32 	%f1, [%rd8];
	ld.global.nc.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	mul.f32 	%f4, %f3, 0f3F000000;
	cvta.to.global.u64 	%rd9, %rd1;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f4;

BB0_2:
	ret;
}


`
 )

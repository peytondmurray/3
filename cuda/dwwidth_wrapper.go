package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import(
	"unsafe"
	"github.com/mumax/3/cuda/cu"
	"github.com/mumax/3/timer"
	"sync"
)

// CUDA handle for avgDWWidth kernel
var avgDWWidth_code cu.Function

// Stores the arguments for avgDWWidth kernel invocation
type avgDWWidth_args_t struct{
	 arg_s unsafe.Pointer
	 arg_mz unsafe.Pointer
	 arg_halfWidth int
	 arg_Nx int
	 arg_Ny int
	 arg_Nz int
	 argptr [6]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for avgDWWidth kernel invocation
var avgDWWidth_args avgDWWidth_args_t

func init(){
	// CUDA driver kernel call wants pointers to arguments, set them up once.
	 avgDWWidth_args.argptr[0] = unsafe.Pointer(&avgDWWidth_args.arg_s)
	 avgDWWidth_args.argptr[1] = unsafe.Pointer(&avgDWWidth_args.arg_mz)
	 avgDWWidth_args.argptr[2] = unsafe.Pointer(&avgDWWidth_args.arg_halfWidth)
	 avgDWWidth_args.argptr[3] = unsafe.Pointer(&avgDWWidth_args.arg_Nx)
	 avgDWWidth_args.argptr[4] = unsafe.Pointer(&avgDWWidth_args.arg_Ny)
	 avgDWWidth_args.argptr[5] = unsafe.Pointer(&avgDWWidth_args.arg_Nz)
	 }

// Wrapper for avgDWWidth CUDA kernel, asynchronous.
func k_avgDWWidth_async ( s unsafe.Pointer, mz unsafe.Pointer, halfWidth int, Nx int, Ny int, Nz int,  cfg *config) {
	if Synchronous{ // debug
		Sync()
		timer.Start("avgDWWidth")
	}

	avgDWWidth_args.Lock()
	defer avgDWWidth_args.Unlock()

	if avgDWWidth_code == 0{
		avgDWWidth_code = fatbinLoad(avgDWWidth_map, "avgDWWidth")
	}

	 avgDWWidth_args.arg_s = s
	 avgDWWidth_args.arg_mz = mz
	 avgDWWidth_args.arg_halfWidth = halfWidth
	 avgDWWidth_args.arg_Nx = Nx
	 avgDWWidth_args.arg_Ny = Ny
	 avgDWWidth_args.arg_Nz = Nz
	

	args := avgDWWidth_args.argptr[:]
	cu.LaunchKernel(avgDWWidth_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, stream0, args)

	if Synchronous{ // debug
		Sync()
		timer.Stop("avgDWWidth")
	}
}

// maps compute capability on PTX code for avgDWWidth kernel.
var avgDWWidth_map = map[int]string{ 0: "" ,
30: avgDWWidth_ptx_30 ,
35: avgDWWidth_ptx_35 ,
37: avgDWWidth_ptx_37 ,
50: avgDWWidth_ptx_50 ,
52: avgDWWidth_ptx_52 ,
53: avgDWWidth_ptx_53 ,
60: avgDWWidth_ptx_60 ,
61: avgDWWidth_ptx_61 ,
70: avgDWWidth_ptx_70 ,
75: avgDWWidth_ptx_75  }

// avgDWWidth PTX code for various compute capabilities.
const(
  avgDWWidth_ptx_30 = `
.version 6.4
.target sm_30
.address_size 64

	// .globl	avgDWWidth

.visible .entry avgDWWidth(
	.param .u64 avgDWWidth_param_0,
	.param .u64 avgDWWidth_param_1,
	.param .u32 avgDWWidth_param_2,
	.param .u32 avgDWWidth_param_3,
	.param .u32 avgDWWidth_param_4,
	.param .u32 avgDWWidth_param_5
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<58>;
	.reg .b64 	%rd<28>;


	ld.param.u64 	%rd12, [avgDWWidth_param_0];
	ld.param.u64 	%rd13, [avgDWWidth_param_1];
	ld.param.u32 	%r21, [avgDWWidth_param_2];
	ld.param.u32 	%r22, [avgDWWidth_param_3];
	ld.param.u32 	%r23, [avgDWWidth_param_4];
	ld.param.u32 	%r24, [avgDWWidth_param_5];
	cvta.to.global.u64 	%rd1, %rd12;
	cvta.to.global.u64 	%rd2, %rd13;
	mov.u32 	%r25, %ntid.x;
	mov.u32 	%r26, %ctaid.x;
	mul.lo.s32 	%r27, %r25, %r26;
	mov.u32 	%r28, %ntid.y;
	mov.u32 	%r1, %ctaid.y;
	mov.u32 	%r2, %tid.y;
	mad.lo.s32 	%r3, %r28, %r1, %r2;
	mov.u32 	%r4, %ntid.z;
	mov.u32 	%r5, %ctaid.z;
	mov.u32 	%r6, %tid.z;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r29, %tid.x;
	neg.s32 	%r30, %r29;
	setp.ge.s32	%p1, %r3, %r23;
	setp.ne.s32	%p2, %r27, %r30;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r7, %r24;
	or.pred  	%p5, %p3, %p4;
	or.b32  	%r31, %r7, %r3;
	setp.ne.s32	%p6, %r31, 0;
	or.pred  	%p7, %p6, %p5;
	@%p7 bra 	BB0_10;

	mad.lo.s32 	%r32, %r7, %r23, %r3;
	mul.lo.s32 	%r8, %r32, %r22;
	mov.u32 	%r53, %r22;

BB0_2:
	add.s32 	%r10, %r53, -1;
	mov.u32 	%r54, -1;
	setp.lt.s32	%p8, %r10, 2;
	@%p8 bra 	BB0_4;

	add.s32 	%r34, %r53, %r8;
	mul.wide.s32 	%rd14, %r34, 4;
	add.s64 	%rd15, %rd2, %rd14;
	add.s32 	%r54, %r53, -2;
	ld.global.f32 	%f1, [%rd15+-8];
	ld.global.f32 	%f2, [%rd15+-4];
	mul.f32 	%f3, %f2, %f1;
	setp.geu.f32	%p9, %f3, 0f00000000;
	mov.u32 	%r53, %r10;
	@%p9 bra 	BB0_2;

BB0_4:
	add.s32 	%r35, %r21, %r54;
	add.s32 	%r13, %r35, 1;
	sub.s32 	%r55, %r54, %r21;
	setp.ge.s32	%p10, %r55, %r13;
	@%p10 bra 	BB0_10;

	shl.b32 	%r38, %r21, 1;
	add.s32 	%r39, %r38, 1;
	and.b32  	%r40, %r39, 3;
	setp.eq.s32	%p11, %r40, 1;
	mov.u32 	%r56, 0;
	@%p11 bra 	BB0_7;

	sub.s32 	%r42, %r54, %r21;
	add.s32 	%r43, %r42, %r8;
	mul.wide.s32 	%rd16, %r43, 4;
	add.s64 	%rd17, %rd2, %rd16;
	ld.global.f32 	%f4, [%rd17];
	ld.global.f32 	%f5, [%rd17+4];
	st.global.f32 	[%rd1], %f4;
	st.global.f32 	[%rd1+4], %f5;
	add.s32 	%r55, %r42, 2;
	mov.u32 	%r56, 2;

BB0_7:
	add.s32 	%r44, %r55, %r8;
	mul.wide.s32 	%rd18, %r44, 4;
	add.s64 	%rd19, %rd2, %rd18;
	ld.global.f32 	%f6, [%rd19];
	mul.wide.s32 	%rd20, %r56, 4;
	add.s64 	%rd25, %rd1, %rd20;
	st.global.f32 	[%rd25], %f6;
	setp.lt.u32	%p12, %r39, 4;
	@%p12 bra 	BB0_10;

	add.s32 	%r57, %r55, 1;
	mad.lo.s32 	%r50, %r23, %r7, %r3;
	mad.lo.s32 	%r51, %r22, %r50, %r55;
	mul.wide.s32 	%rd22, %r51, 4;
	add.s64 	%rd27, %rd2, %rd22;
	add.s32 	%r52, %r56, 4;
	mul.wide.s32 	%rd23, %r52, 4;
	add.s64 	%rd26, %rd1, %rd23;

BB0_9:
	ld.global.f32 	%f7, [%rd27+4];
	ld.global.f32 	%f8, [%rd27+8];
	ld.global.f32 	%f9, [%rd27+12];
	ld.global.f32 	%f10, [%rd27+16];
	st.global.f32 	[%rd25+4], %f7;
	st.global.f32 	[%rd25+8], %f8;
	st.global.f32 	[%rd25+12], %f9;
	add.s64 	%rd27, %rd27, 16;
	st.global.f32 	[%rd26], %f10;
	add.s64 	%rd26, %rd26, 16;
	add.s64 	%rd25, %rd25, 16;
	add.s32 	%r57, %r57, 4;
	setp.lt.s32	%p13, %r57, %r13;
	@%p13 bra 	BB0_9;

BB0_10:
	ret;
}


`
   avgDWWidth_ptx_35 = `
.version 6.4
.target sm_35
.address_size 64

	// .globl	avgDWWidth

.visible .entry avgDWWidth(
	.param .u64 avgDWWidth_param_0,
	.param .u64 avgDWWidth_param_1,
	.param .u32 avgDWWidth_param_2,
	.param .u32 avgDWWidth_param_3,
	.param .u32 avgDWWidth_param_4,
	.param .u32 avgDWWidth_param_5
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<55>;
	.reg .b64 	%rd<28>;


	ld.param.u64 	%rd12, [avgDWWidth_param_0];
	ld.param.u64 	%rd13, [avgDWWidth_param_1];
	ld.param.u32 	%r22, [avgDWWidth_param_2];
	ld.param.u32 	%r23, [avgDWWidth_param_3];
	ld.param.u32 	%r24, [avgDWWidth_param_4];
	ld.param.u32 	%r25, [avgDWWidth_param_5];
	cvta.to.global.u64 	%rd1, %rd12;
	cvta.to.global.u64 	%rd2, %rd13;
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %ctaid.x;
	mul.lo.s32 	%r28, %r26, %r27;
	mov.u32 	%r29, %ntid.y;
	mov.u32 	%r1, %ctaid.y;
	mov.u32 	%r2, %tid.y;
	mad.lo.s32 	%r3, %r29, %r1, %r2;
	mov.u32 	%r4, %ntid.z;
	mov.u32 	%r5, %ctaid.z;
	mov.u32 	%r6, %tid.z;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r30, %tid.x;
	neg.s32 	%r31, %r30;
	setp.ge.s32	%p1, %r3, %r24;
	setp.ne.s32	%p2, %r28, %r31;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r7, %r25;
	or.pred  	%p5, %p3, %p4;
	or.b32  	%r32, %r7, %r3;
	setp.ne.s32	%p6, %r32, 0;
	or.pred  	%p7, %p6, %p5;
	@%p7 bra 	BB0_10;

	mad.lo.s32 	%r33, %r7, %r24, %r3;
	mul.lo.s32 	%r8, %r33, %r23;
	mov.u32 	%r50, %r23;

BB0_2:
	add.s32 	%r10, %r50, -1;
	mov.u32 	%r51, -1;
	setp.lt.s32	%p8, %r10, 2;
	@%p8 bra 	BB0_4;

	add.s32 	%r35, %r50, %r8;
	mul.wide.s32 	%rd14, %r35, 4;
	add.s64 	%rd15, %rd2, %rd14;
	add.s32 	%r51, %r50, -2;
	ld.global.nc.f32 	%f1, [%rd15+-8];
	ld.global.nc.f32 	%f2, [%rd15+-4];
	mul.f32 	%f3, %f2, %f1;
	setp.geu.f32	%p9, %f3, 0f00000000;
	mov.u32 	%r50, %r10;
	@%p9 bra 	BB0_2;

BB0_4:
	add.s32 	%r36, %r22, %r51;
	add.s32 	%r13, %r36, 1;
	sub.s32 	%r52, %r51, %r22;
	setp.ge.s32	%p10, %r52, %r13;
	@%p10 bra 	BB0_10;

	shl.b32 	%r38, %r22, 1;
	add.s32 	%r15, %r38, 1;
	and.b32  	%r39, %r15, 3;
	setp.eq.s32	%p11, %r39, 1;
	mov.u32 	%r53, 0;
	@%p11 bra 	BB0_7;

	sub.s32 	%r41, %r51, %r22;
	add.s32 	%r42, %r41, %r8;
	mul.wide.s32 	%rd16, %r42, 4;
	add.s64 	%rd17, %rd2, %rd16;
	ld.global.nc.f32 	%f4, [%rd17];
	ld.global.nc.f32 	%f5, [%rd17+4];
	st.global.f32 	[%rd1], %f4;
	st.global.f32 	[%rd1+4], %f5;
	add.s32 	%r52, %r41, 2;
	mov.u32 	%r53, 2;

BB0_7:
	add.s32 	%r43, %r52, %r8;
	mul.wide.s32 	%rd18, %r43, 4;
	add.s64 	%rd19, %rd2, %rd18;
	ld.global.nc.f32 	%f6, [%rd19];
	mul.wide.s32 	%rd20, %r53, 4;
	add.s64 	%rd25, %rd1, %rd20;
	st.global.f32 	[%rd25], %f6;
	setp.lt.u32	%p12, %r15, 4;
	@%p12 bra 	BB0_10;

	add.s32 	%r54, %r52, 1;
	mad.lo.s32 	%r47, %r24, %r7, %r3;
	mad.lo.s32 	%r48, %r23, %r47, %r52;
	mul.wide.s32 	%rd22, %r48, 4;
	add.s64 	%rd27, %rd2, %rd22;
	add.s32 	%r49, %r53, 4;
	mul.wide.s32 	%rd23, %r49, 4;
	add.s64 	%rd26, %rd1, %rd23;

BB0_9:
	ld.global.nc.f32 	%f7, [%rd27+4];
	ld.global.nc.f32 	%f8, [%rd27+8];
	ld.global.nc.f32 	%f9, [%rd27+12];
	ld.global.nc.f32 	%f10, [%rd27+16];
	st.global.f32 	[%rd25+4], %f7;
	st.global.f32 	[%rd25+8], %f8;
	st.global.f32 	[%rd25+12], %f9;
	add.s64 	%rd27, %rd27, 16;
	st.global.f32 	[%rd26], %f10;
	add.s64 	%rd26, %rd26, 16;
	add.s64 	%rd25, %rd25, 16;
	add.s32 	%r54, %r54, 4;
	setp.lt.s32	%p13, %r54, %r13;
	@%p13 bra 	BB0_9;

BB0_10:
	ret;
}


`
   avgDWWidth_ptx_37 = `
.version 6.4
.target sm_37
.address_size 64

	// .globl	avgDWWidth

.visible .entry avgDWWidth(
	.param .u64 avgDWWidth_param_0,
	.param .u64 avgDWWidth_param_1,
	.param .u32 avgDWWidth_param_2,
	.param .u32 avgDWWidth_param_3,
	.param .u32 avgDWWidth_param_4,
	.param .u32 avgDWWidth_param_5
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<55>;
	.reg .b64 	%rd<28>;


	ld.param.u64 	%rd12, [avgDWWidth_param_0];
	ld.param.u64 	%rd13, [avgDWWidth_param_1];
	ld.param.u32 	%r22, [avgDWWidth_param_2];
	ld.param.u32 	%r23, [avgDWWidth_param_3];
	ld.param.u32 	%r24, [avgDWWidth_param_4];
	ld.param.u32 	%r25, [avgDWWidth_param_5];
	cvta.to.global.u64 	%rd1, %rd12;
	cvta.to.global.u64 	%rd2, %rd13;
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %ctaid.x;
	mul.lo.s32 	%r28, %r26, %r27;
	mov.u32 	%r29, %ntid.y;
	mov.u32 	%r1, %ctaid.y;
	mov.u32 	%r2, %tid.y;
	mad.lo.s32 	%r3, %r29, %r1, %r2;
	mov.u32 	%r4, %ntid.z;
	mov.u32 	%r5, %ctaid.z;
	mov.u32 	%r6, %tid.z;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r30, %tid.x;
	neg.s32 	%r31, %r30;
	setp.ge.s32	%p1, %r3, %r24;
	setp.ne.s32	%p2, %r28, %r31;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r7, %r25;
	or.pred  	%p5, %p3, %p4;
	or.b32  	%r32, %r7, %r3;
	setp.ne.s32	%p6, %r32, 0;
	or.pred  	%p7, %p6, %p5;
	@%p7 bra 	BB0_10;

	mad.lo.s32 	%r33, %r7, %r24, %r3;
	mul.lo.s32 	%r8, %r33, %r23;
	mov.u32 	%r50, %r23;

BB0_2:
	add.s32 	%r10, %r50, -1;
	mov.u32 	%r51, -1;
	setp.lt.s32	%p8, %r10, 2;
	@%p8 bra 	BB0_4;

	add.s32 	%r35, %r50, %r8;
	mul.wide.s32 	%rd14, %r35, 4;
	add.s64 	%rd15, %rd2, %rd14;
	add.s32 	%r51, %r50, -2;
	ld.global.nc.f32 	%f1, [%rd15+-8];
	ld.global.nc.f32 	%f2, [%rd15+-4];
	mul.f32 	%f3, %f2, %f1;
	setp.geu.f32	%p9, %f3, 0f00000000;
	mov.u32 	%r50, %r10;
	@%p9 bra 	BB0_2;

BB0_4:
	add.s32 	%r36, %r22, %r51;
	add.s32 	%r13, %r36, 1;
	sub.s32 	%r52, %r51, %r22;
	setp.ge.s32	%p10, %r52, %r13;
	@%p10 bra 	BB0_10;

	shl.b32 	%r38, %r22, 1;
	add.s32 	%r15, %r38, 1;
	and.b32  	%r39, %r15, 3;
	setp.eq.s32	%p11, %r39, 1;
	mov.u32 	%r53, 0;
	@%p11 bra 	BB0_7;

	sub.s32 	%r41, %r51, %r22;
	add.s32 	%r42, %r41, %r8;
	mul.wide.s32 	%rd16, %r42, 4;
	add.s64 	%rd17, %rd2, %rd16;
	ld.global.nc.f32 	%f4, [%rd17];
	ld.global.nc.f32 	%f5, [%rd17+4];
	st.global.f32 	[%rd1], %f4;
	st.global.f32 	[%rd1+4], %f5;
	add.s32 	%r52, %r41, 2;
	mov.u32 	%r53, 2;

BB0_7:
	add.s32 	%r43, %r52, %r8;
	mul.wide.s32 	%rd18, %r43, 4;
	add.s64 	%rd19, %rd2, %rd18;
	ld.global.nc.f32 	%f6, [%rd19];
	mul.wide.s32 	%rd20, %r53, 4;
	add.s64 	%rd25, %rd1, %rd20;
	st.global.f32 	[%rd25], %f6;
	setp.lt.u32	%p12, %r15, 4;
	@%p12 bra 	BB0_10;

	add.s32 	%r54, %r52, 1;
	mad.lo.s32 	%r47, %r24, %r7, %r3;
	mad.lo.s32 	%r48, %r23, %r47, %r52;
	mul.wide.s32 	%rd22, %r48, 4;
	add.s64 	%rd27, %rd2, %rd22;
	add.s32 	%r49, %r53, 4;
	mul.wide.s32 	%rd23, %r49, 4;
	add.s64 	%rd26, %rd1, %rd23;

BB0_9:
	ld.global.nc.f32 	%f7, [%rd27+4];
	ld.global.nc.f32 	%f8, [%rd27+8];
	ld.global.nc.f32 	%f9, [%rd27+12];
	ld.global.nc.f32 	%f10, [%rd27+16];
	st.global.f32 	[%rd25+4], %f7;
	st.global.f32 	[%rd25+8], %f8;
	st.global.f32 	[%rd25+12], %f9;
	add.s64 	%rd27, %rd27, 16;
	st.global.f32 	[%rd26], %f10;
	add.s64 	%rd26, %rd26, 16;
	add.s64 	%rd25, %rd25, 16;
	add.s32 	%r54, %r54, 4;
	setp.lt.s32	%p13, %r54, %r13;
	@%p13 bra 	BB0_9;

BB0_10:
	ret;
}


`
   avgDWWidth_ptx_50 = `
.version 6.4
.target sm_50
.address_size 64

	// .globl	avgDWWidth

.visible .entry avgDWWidth(
	.param .u64 avgDWWidth_param_0,
	.param .u64 avgDWWidth_param_1,
	.param .u32 avgDWWidth_param_2,
	.param .u32 avgDWWidth_param_3,
	.param .u32 avgDWWidth_param_4,
	.param .u32 avgDWWidth_param_5
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<55>;
	.reg .b64 	%rd<28>;


	ld.param.u64 	%rd12, [avgDWWidth_param_0];
	ld.param.u64 	%rd13, [avgDWWidth_param_1];
	ld.param.u32 	%r22, [avgDWWidth_param_2];
	ld.param.u32 	%r23, [avgDWWidth_param_3];
	ld.param.u32 	%r24, [avgDWWidth_param_4];
	ld.param.u32 	%r25, [avgDWWidth_param_5];
	cvta.to.global.u64 	%rd1, %rd12;
	cvta.to.global.u64 	%rd2, %rd13;
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %ctaid.x;
	mul.lo.s32 	%r28, %r26, %r27;
	mov.u32 	%r29, %ntid.y;
	mov.u32 	%r1, %ctaid.y;
	mov.u32 	%r2, %tid.y;
	mad.lo.s32 	%r3, %r29, %r1, %r2;
	mov.u32 	%r4, %ntid.z;
	mov.u32 	%r5, %ctaid.z;
	mov.u32 	%r6, %tid.z;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r30, %tid.x;
	neg.s32 	%r31, %r30;
	setp.ge.s32	%p1, %r3, %r24;
	setp.ne.s32	%p2, %r28, %r31;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r7, %r25;
	or.pred  	%p5, %p3, %p4;
	or.b32  	%r32, %r7, %r3;
	setp.ne.s32	%p6, %r32, 0;
	or.pred  	%p7, %p6, %p5;
	@%p7 bra 	BB0_10;

	mad.lo.s32 	%r33, %r7, %r24, %r3;
	mul.lo.s32 	%r8, %r33, %r23;
	mov.u32 	%r50, %r23;

BB0_2:
	add.s32 	%r10, %r50, -1;
	mov.u32 	%r51, -1;
	setp.lt.s32	%p8, %r10, 2;
	@%p8 bra 	BB0_4;

	add.s32 	%r35, %r50, %r8;
	mul.wide.s32 	%rd14, %r35, 4;
	add.s64 	%rd15, %rd2, %rd14;
	add.s32 	%r51, %r50, -2;
	ld.global.nc.f32 	%f1, [%rd15+-8];
	ld.global.nc.f32 	%f2, [%rd15+-4];
	mul.f32 	%f3, %f2, %f1;
	setp.geu.f32	%p9, %f3, 0f00000000;
	mov.u32 	%r50, %r10;
	@%p9 bra 	BB0_2;

BB0_4:
	add.s32 	%r36, %r22, %r51;
	add.s32 	%r13, %r36, 1;
	sub.s32 	%r52, %r51, %r22;
	setp.ge.s32	%p10, %r52, %r13;
	@%p10 bra 	BB0_10;

	shl.b32 	%r38, %r22, 1;
	add.s32 	%r15, %r38, 1;
	and.b32  	%r39, %r15, 3;
	setp.eq.s32	%p11, %r39, 1;
	mov.u32 	%r53, 0;
	@%p11 bra 	BB0_7;

	sub.s32 	%r41, %r51, %r22;
	add.s32 	%r42, %r41, %r8;
	mul.wide.s32 	%rd16, %r42, 4;
	add.s64 	%rd17, %rd2, %rd16;
	ld.global.nc.f32 	%f4, [%rd17];
	ld.global.nc.f32 	%f5, [%rd17+4];
	st.global.f32 	[%rd1], %f4;
	st.global.f32 	[%rd1+4], %f5;
	add.s32 	%r52, %r41, 2;
	mov.u32 	%r53, 2;

BB0_7:
	add.s32 	%r43, %r52, %r8;
	mul.wide.s32 	%rd18, %r43, 4;
	add.s64 	%rd19, %rd2, %rd18;
	ld.global.nc.f32 	%f6, [%rd19];
	mul.wide.s32 	%rd20, %r53, 4;
	add.s64 	%rd25, %rd1, %rd20;
	st.global.f32 	[%rd25], %f6;
	setp.lt.u32	%p12, %r15, 4;
	@%p12 bra 	BB0_10;

	add.s32 	%r54, %r52, 1;
	mad.lo.s32 	%r47, %r24, %r7, %r3;
	mad.lo.s32 	%r48, %r23, %r47, %r52;
	mul.wide.s32 	%rd22, %r48, 4;
	add.s64 	%rd27, %rd2, %rd22;
	add.s32 	%r49, %r53, 4;
	mul.wide.s32 	%rd23, %r49, 4;
	add.s64 	%rd26, %rd1, %rd23;

BB0_9:
	ld.global.nc.f32 	%f7, [%rd27+4];
	ld.global.nc.f32 	%f8, [%rd27+8];
	ld.global.nc.f32 	%f9, [%rd27+12];
	ld.global.nc.f32 	%f10, [%rd27+16];
	st.global.f32 	[%rd25+4], %f7;
	st.global.f32 	[%rd25+8], %f8;
	st.global.f32 	[%rd25+12], %f9;
	add.s64 	%rd27, %rd27, 16;
	st.global.f32 	[%rd26], %f10;
	add.s64 	%rd26, %rd26, 16;
	add.s64 	%rd25, %rd25, 16;
	add.s32 	%r54, %r54, 4;
	setp.lt.s32	%p13, %r54, %r13;
	@%p13 bra 	BB0_9;

BB0_10:
	ret;
}


`
   avgDWWidth_ptx_52 = `
.version 6.4
.target sm_52
.address_size 64

	// .globl	avgDWWidth

.visible .entry avgDWWidth(
	.param .u64 avgDWWidth_param_0,
	.param .u64 avgDWWidth_param_1,
	.param .u32 avgDWWidth_param_2,
	.param .u32 avgDWWidth_param_3,
	.param .u32 avgDWWidth_param_4,
	.param .u32 avgDWWidth_param_5
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<55>;
	.reg .b64 	%rd<28>;


	ld.param.u64 	%rd12, [avgDWWidth_param_0];
	ld.param.u64 	%rd13, [avgDWWidth_param_1];
	ld.param.u32 	%r22, [avgDWWidth_param_2];
	ld.param.u32 	%r23, [avgDWWidth_param_3];
	ld.param.u32 	%r24, [avgDWWidth_param_4];
	ld.param.u32 	%r25, [avgDWWidth_param_5];
	cvta.to.global.u64 	%rd1, %rd12;
	cvta.to.global.u64 	%rd2, %rd13;
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %ctaid.x;
	mul.lo.s32 	%r28, %r26, %r27;
	mov.u32 	%r29, %ntid.y;
	mov.u32 	%r1, %ctaid.y;
	mov.u32 	%r2, %tid.y;
	mad.lo.s32 	%r3, %r29, %r1, %r2;
	mov.u32 	%r4, %ntid.z;
	mov.u32 	%r5, %ctaid.z;
	mov.u32 	%r6, %tid.z;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r30, %tid.x;
	neg.s32 	%r31, %r30;
	setp.ge.s32	%p1, %r3, %r24;
	setp.ne.s32	%p2, %r28, %r31;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r7, %r25;
	or.pred  	%p5, %p3, %p4;
	or.b32  	%r32, %r7, %r3;
	setp.ne.s32	%p6, %r32, 0;
	or.pred  	%p7, %p6, %p5;
	@%p7 bra 	BB0_10;

	mad.lo.s32 	%r33, %r7, %r24, %r3;
	mul.lo.s32 	%r8, %r33, %r23;
	mov.u32 	%r50, %r23;

BB0_2:
	add.s32 	%r10, %r50, -1;
	mov.u32 	%r51, -1;
	setp.lt.s32	%p8, %r10, 2;
	@%p8 bra 	BB0_4;

	add.s32 	%r35, %r50, %r8;
	mul.wide.s32 	%rd14, %r35, 4;
	add.s64 	%rd15, %rd2, %rd14;
	add.s32 	%r51, %r50, -2;
	ld.global.nc.f32 	%f1, [%rd15+-8];
	ld.global.nc.f32 	%f2, [%rd15+-4];
	mul.f32 	%f3, %f2, %f1;
	setp.geu.f32	%p9, %f3, 0f00000000;
	mov.u32 	%r50, %r10;
	@%p9 bra 	BB0_2;

BB0_4:
	add.s32 	%r36, %r22, %r51;
	add.s32 	%r13, %r36, 1;
	sub.s32 	%r52, %r51, %r22;
	setp.ge.s32	%p10, %r52, %r13;
	@%p10 bra 	BB0_10;

	shl.b32 	%r38, %r22, 1;
	add.s32 	%r15, %r38, 1;
	and.b32  	%r39, %r15, 3;
	setp.eq.s32	%p11, %r39, 1;
	mov.u32 	%r53, 0;
	@%p11 bra 	BB0_7;

	sub.s32 	%r41, %r51, %r22;
	add.s32 	%r42, %r41, %r8;
	mul.wide.s32 	%rd16, %r42, 4;
	add.s64 	%rd17, %rd2, %rd16;
	ld.global.nc.f32 	%f4, [%rd17];
	ld.global.nc.f32 	%f5, [%rd17+4];
	st.global.f32 	[%rd1], %f4;
	st.global.f32 	[%rd1+4], %f5;
	add.s32 	%r52, %r41, 2;
	mov.u32 	%r53, 2;

BB0_7:
	add.s32 	%r43, %r52, %r8;
	mul.wide.s32 	%rd18, %r43, 4;
	add.s64 	%rd19, %rd2, %rd18;
	ld.global.nc.f32 	%f6, [%rd19];
	mul.wide.s32 	%rd20, %r53, 4;
	add.s64 	%rd25, %rd1, %rd20;
	st.global.f32 	[%rd25], %f6;
	setp.lt.u32	%p12, %r15, 4;
	@%p12 bra 	BB0_10;

	add.s32 	%r54, %r52, 1;
	mad.lo.s32 	%r47, %r24, %r7, %r3;
	mad.lo.s32 	%r48, %r23, %r47, %r52;
	mul.wide.s32 	%rd22, %r48, 4;
	add.s64 	%rd27, %rd2, %rd22;
	add.s32 	%r49, %r53, 4;
	mul.wide.s32 	%rd23, %r49, 4;
	add.s64 	%rd26, %rd1, %rd23;

BB0_9:
	ld.global.nc.f32 	%f7, [%rd27+4];
	ld.global.nc.f32 	%f8, [%rd27+8];
	ld.global.nc.f32 	%f9, [%rd27+12];
	ld.global.nc.f32 	%f10, [%rd27+16];
	st.global.f32 	[%rd25+4], %f7;
	st.global.f32 	[%rd25+8], %f8;
	st.global.f32 	[%rd25+12], %f9;
	add.s64 	%rd27, %rd27, 16;
	st.global.f32 	[%rd26], %f10;
	add.s64 	%rd26, %rd26, 16;
	add.s64 	%rd25, %rd25, 16;
	add.s32 	%r54, %r54, 4;
	setp.lt.s32	%p13, %r54, %r13;
	@%p13 bra 	BB0_9;

BB0_10:
	ret;
}


`
   avgDWWidth_ptx_53 = `
.version 6.4
.target sm_53
.address_size 64

	// .globl	avgDWWidth

.visible .entry avgDWWidth(
	.param .u64 avgDWWidth_param_0,
	.param .u64 avgDWWidth_param_1,
	.param .u32 avgDWWidth_param_2,
	.param .u32 avgDWWidth_param_3,
	.param .u32 avgDWWidth_param_4,
	.param .u32 avgDWWidth_param_5
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<55>;
	.reg .b64 	%rd<28>;


	ld.param.u64 	%rd12, [avgDWWidth_param_0];
	ld.param.u64 	%rd13, [avgDWWidth_param_1];
	ld.param.u32 	%r22, [avgDWWidth_param_2];
	ld.param.u32 	%r23, [avgDWWidth_param_3];
	ld.param.u32 	%r24, [avgDWWidth_param_4];
	ld.param.u32 	%r25, [avgDWWidth_param_5];
	cvta.to.global.u64 	%rd1, %rd12;
	cvta.to.global.u64 	%rd2, %rd13;
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %ctaid.x;
	mul.lo.s32 	%r28, %r26, %r27;
	mov.u32 	%r29, %ntid.y;
	mov.u32 	%r1, %ctaid.y;
	mov.u32 	%r2, %tid.y;
	mad.lo.s32 	%r3, %r29, %r1, %r2;
	mov.u32 	%r4, %ntid.z;
	mov.u32 	%r5, %ctaid.z;
	mov.u32 	%r6, %tid.z;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r30, %tid.x;
	neg.s32 	%r31, %r30;
	setp.ge.s32	%p1, %r3, %r24;
	setp.ne.s32	%p2, %r28, %r31;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r7, %r25;
	or.pred  	%p5, %p3, %p4;
	or.b32  	%r32, %r7, %r3;
	setp.ne.s32	%p6, %r32, 0;
	or.pred  	%p7, %p6, %p5;
	@%p7 bra 	BB0_10;

	mad.lo.s32 	%r33, %r7, %r24, %r3;
	mul.lo.s32 	%r8, %r33, %r23;
	mov.u32 	%r50, %r23;

BB0_2:
	add.s32 	%r10, %r50, -1;
	mov.u32 	%r51, -1;
	setp.lt.s32	%p8, %r10, 2;
	@%p8 bra 	BB0_4;

	add.s32 	%r35, %r50, %r8;
	mul.wide.s32 	%rd14, %r35, 4;
	add.s64 	%rd15, %rd2, %rd14;
	add.s32 	%r51, %r50, -2;
	ld.global.nc.f32 	%f1, [%rd15+-8];
	ld.global.nc.f32 	%f2, [%rd15+-4];
	mul.f32 	%f3, %f2, %f1;
	setp.geu.f32	%p9, %f3, 0f00000000;
	mov.u32 	%r50, %r10;
	@%p9 bra 	BB0_2;

BB0_4:
	add.s32 	%r36, %r22, %r51;
	add.s32 	%r13, %r36, 1;
	sub.s32 	%r52, %r51, %r22;
	setp.ge.s32	%p10, %r52, %r13;
	@%p10 bra 	BB0_10;

	shl.b32 	%r38, %r22, 1;
	add.s32 	%r15, %r38, 1;
	and.b32  	%r39, %r15, 3;
	setp.eq.s32	%p11, %r39, 1;
	mov.u32 	%r53, 0;
	@%p11 bra 	BB0_7;

	sub.s32 	%r41, %r51, %r22;
	add.s32 	%r42, %r41, %r8;
	mul.wide.s32 	%rd16, %r42, 4;
	add.s64 	%rd17, %rd2, %rd16;
	ld.global.nc.f32 	%f4, [%rd17];
	ld.global.nc.f32 	%f5, [%rd17+4];
	st.global.f32 	[%rd1], %f4;
	st.global.f32 	[%rd1+4], %f5;
	add.s32 	%r52, %r41, 2;
	mov.u32 	%r53, 2;

BB0_7:
	add.s32 	%r43, %r52, %r8;
	mul.wide.s32 	%rd18, %r43, 4;
	add.s64 	%rd19, %rd2, %rd18;
	ld.global.nc.f32 	%f6, [%rd19];
	mul.wide.s32 	%rd20, %r53, 4;
	add.s64 	%rd25, %rd1, %rd20;
	st.global.f32 	[%rd25], %f6;
	setp.lt.u32	%p12, %r15, 4;
	@%p12 bra 	BB0_10;

	add.s32 	%r54, %r52, 1;
	mad.lo.s32 	%r47, %r24, %r7, %r3;
	mad.lo.s32 	%r48, %r23, %r47, %r52;
	mul.wide.s32 	%rd22, %r48, 4;
	add.s64 	%rd27, %rd2, %rd22;
	add.s32 	%r49, %r53, 4;
	mul.wide.s32 	%rd23, %r49, 4;
	add.s64 	%rd26, %rd1, %rd23;

BB0_9:
	ld.global.nc.f32 	%f7, [%rd27+4];
	ld.global.nc.f32 	%f8, [%rd27+8];
	ld.global.nc.f32 	%f9, [%rd27+12];
	ld.global.nc.f32 	%f10, [%rd27+16];
	st.global.f32 	[%rd25+4], %f7;
	st.global.f32 	[%rd25+8], %f8;
	st.global.f32 	[%rd25+12], %f9;
	add.s64 	%rd27, %rd27, 16;
	st.global.f32 	[%rd26], %f10;
	add.s64 	%rd26, %rd26, 16;
	add.s64 	%rd25, %rd25, 16;
	add.s32 	%r54, %r54, 4;
	setp.lt.s32	%p13, %r54, %r13;
	@%p13 bra 	BB0_9;

BB0_10:
	ret;
}


`
   avgDWWidth_ptx_60 = `
.version 6.4
.target sm_60
.address_size 64

	// .globl	avgDWWidth

.visible .entry avgDWWidth(
	.param .u64 avgDWWidth_param_0,
	.param .u64 avgDWWidth_param_1,
	.param .u32 avgDWWidth_param_2,
	.param .u32 avgDWWidth_param_3,
	.param .u32 avgDWWidth_param_4,
	.param .u32 avgDWWidth_param_5
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<55>;
	.reg .b64 	%rd<28>;


	ld.param.u64 	%rd12, [avgDWWidth_param_0];
	ld.param.u64 	%rd13, [avgDWWidth_param_1];
	ld.param.u32 	%r22, [avgDWWidth_param_2];
	ld.param.u32 	%r23, [avgDWWidth_param_3];
	ld.param.u32 	%r24, [avgDWWidth_param_4];
	ld.param.u32 	%r25, [avgDWWidth_param_5];
	cvta.to.global.u64 	%rd1, %rd12;
	cvta.to.global.u64 	%rd2, %rd13;
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %ctaid.x;
	mul.lo.s32 	%r28, %r26, %r27;
	mov.u32 	%r29, %ntid.y;
	mov.u32 	%r1, %ctaid.y;
	mov.u32 	%r2, %tid.y;
	mad.lo.s32 	%r3, %r29, %r1, %r2;
	mov.u32 	%r4, %ntid.z;
	mov.u32 	%r5, %ctaid.z;
	mov.u32 	%r6, %tid.z;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r30, %tid.x;
	neg.s32 	%r31, %r30;
	setp.ge.s32	%p1, %r3, %r24;
	setp.ne.s32	%p2, %r28, %r31;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r7, %r25;
	or.pred  	%p5, %p3, %p4;
	or.b32  	%r32, %r7, %r3;
	setp.ne.s32	%p6, %r32, 0;
	or.pred  	%p7, %p6, %p5;
	@%p7 bra 	BB0_10;

	mad.lo.s32 	%r33, %r7, %r24, %r3;
	mul.lo.s32 	%r8, %r33, %r23;
	mov.u32 	%r50, %r23;

BB0_2:
	add.s32 	%r10, %r50, -1;
	mov.u32 	%r51, -1;
	setp.lt.s32	%p8, %r10, 2;
	@%p8 bra 	BB0_4;

	add.s32 	%r35, %r50, %r8;
	mul.wide.s32 	%rd14, %r35, 4;
	add.s64 	%rd15, %rd2, %rd14;
	add.s32 	%r51, %r50, -2;
	ld.global.nc.f32 	%f1, [%rd15+-8];
	ld.global.nc.f32 	%f2, [%rd15+-4];
	mul.f32 	%f3, %f2, %f1;
	setp.geu.f32	%p9, %f3, 0f00000000;
	mov.u32 	%r50, %r10;
	@%p9 bra 	BB0_2;

BB0_4:
	add.s32 	%r36, %r22, %r51;
	add.s32 	%r13, %r36, 1;
	sub.s32 	%r52, %r51, %r22;
	setp.ge.s32	%p10, %r52, %r13;
	@%p10 bra 	BB0_10;

	shl.b32 	%r38, %r22, 1;
	add.s32 	%r15, %r38, 1;
	and.b32  	%r39, %r15, 3;
	setp.eq.s32	%p11, %r39, 1;
	mov.u32 	%r53, 0;
	@%p11 bra 	BB0_7;

	sub.s32 	%r41, %r51, %r22;
	add.s32 	%r42, %r41, %r8;
	mul.wide.s32 	%rd16, %r42, 4;
	add.s64 	%rd17, %rd2, %rd16;
	ld.global.nc.f32 	%f4, [%rd17];
	ld.global.nc.f32 	%f5, [%rd17+4];
	st.global.f32 	[%rd1], %f4;
	st.global.f32 	[%rd1+4], %f5;
	add.s32 	%r52, %r41, 2;
	mov.u32 	%r53, 2;

BB0_7:
	add.s32 	%r43, %r52, %r8;
	mul.wide.s32 	%rd18, %r43, 4;
	add.s64 	%rd19, %rd2, %rd18;
	ld.global.nc.f32 	%f6, [%rd19];
	mul.wide.s32 	%rd20, %r53, 4;
	add.s64 	%rd25, %rd1, %rd20;
	st.global.f32 	[%rd25], %f6;
	setp.lt.u32	%p12, %r15, 4;
	@%p12 bra 	BB0_10;

	add.s32 	%r54, %r52, 1;
	mad.lo.s32 	%r47, %r24, %r7, %r3;
	mad.lo.s32 	%r48, %r23, %r47, %r52;
	mul.wide.s32 	%rd22, %r48, 4;
	add.s64 	%rd27, %rd2, %rd22;
	add.s32 	%r49, %r53, 4;
	mul.wide.s32 	%rd23, %r49, 4;
	add.s64 	%rd26, %rd1, %rd23;

BB0_9:
	ld.global.nc.f32 	%f7, [%rd27+4];
	ld.global.nc.f32 	%f8, [%rd27+8];
	ld.global.nc.f32 	%f9, [%rd27+12];
	ld.global.nc.f32 	%f10, [%rd27+16];
	st.global.f32 	[%rd25+4], %f7;
	st.global.f32 	[%rd25+8], %f8;
	st.global.f32 	[%rd25+12], %f9;
	add.s64 	%rd27, %rd27, 16;
	st.global.f32 	[%rd26], %f10;
	add.s64 	%rd26, %rd26, 16;
	add.s64 	%rd25, %rd25, 16;
	add.s32 	%r54, %r54, 4;
	setp.lt.s32	%p13, %r54, %r13;
	@%p13 bra 	BB0_9;

BB0_10:
	ret;
}


`
   avgDWWidth_ptx_61 = `
.version 6.4
.target sm_61
.address_size 64

	// .globl	avgDWWidth

.visible .entry avgDWWidth(
	.param .u64 avgDWWidth_param_0,
	.param .u64 avgDWWidth_param_1,
	.param .u32 avgDWWidth_param_2,
	.param .u32 avgDWWidth_param_3,
	.param .u32 avgDWWidth_param_4,
	.param .u32 avgDWWidth_param_5
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<55>;
	.reg .b64 	%rd<28>;


	ld.param.u64 	%rd12, [avgDWWidth_param_0];
	ld.param.u64 	%rd13, [avgDWWidth_param_1];
	ld.param.u32 	%r22, [avgDWWidth_param_2];
	ld.param.u32 	%r23, [avgDWWidth_param_3];
	ld.param.u32 	%r24, [avgDWWidth_param_4];
	ld.param.u32 	%r25, [avgDWWidth_param_5];
	cvta.to.global.u64 	%rd1, %rd12;
	cvta.to.global.u64 	%rd2, %rd13;
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %ctaid.x;
	mul.lo.s32 	%r28, %r26, %r27;
	mov.u32 	%r29, %ntid.y;
	mov.u32 	%r1, %ctaid.y;
	mov.u32 	%r2, %tid.y;
	mad.lo.s32 	%r3, %r29, %r1, %r2;
	mov.u32 	%r4, %ntid.z;
	mov.u32 	%r5, %ctaid.z;
	mov.u32 	%r6, %tid.z;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r30, %tid.x;
	neg.s32 	%r31, %r30;
	setp.ge.s32	%p1, %r3, %r24;
	setp.ne.s32	%p2, %r28, %r31;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r7, %r25;
	or.pred  	%p5, %p3, %p4;
	or.b32  	%r32, %r7, %r3;
	setp.ne.s32	%p6, %r32, 0;
	or.pred  	%p7, %p6, %p5;
	@%p7 bra 	BB0_10;

	mad.lo.s32 	%r33, %r7, %r24, %r3;
	mul.lo.s32 	%r8, %r33, %r23;
	mov.u32 	%r50, %r23;

BB0_2:
	add.s32 	%r10, %r50, -1;
	mov.u32 	%r51, -1;
	setp.lt.s32	%p8, %r10, 2;
	@%p8 bra 	BB0_4;

	add.s32 	%r35, %r50, %r8;
	mul.wide.s32 	%rd14, %r35, 4;
	add.s64 	%rd15, %rd2, %rd14;
	add.s32 	%r51, %r50, -2;
	ld.global.nc.f32 	%f1, [%rd15+-8];
	ld.global.nc.f32 	%f2, [%rd15+-4];
	mul.f32 	%f3, %f2, %f1;
	setp.geu.f32	%p9, %f3, 0f00000000;
	mov.u32 	%r50, %r10;
	@%p9 bra 	BB0_2;

BB0_4:
	add.s32 	%r36, %r22, %r51;
	add.s32 	%r13, %r36, 1;
	sub.s32 	%r52, %r51, %r22;
	setp.ge.s32	%p10, %r52, %r13;
	@%p10 bra 	BB0_10;

	shl.b32 	%r38, %r22, 1;
	add.s32 	%r15, %r38, 1;
	and.b32  	%r39, %r15, 3;
	setp.eq.s32	%p11, %r39, 1;
	mov.u32 	%r53, 0;
	@%p11 bra 	BB0_7;

	sub.s32 	%r41, %r51, %r22;
	add.s32 	%r42, %r41, %r8;
	mul.wide.s32 	%rd16, %r42, 4;
	add.s64 	%rd17, %rd2, %rd16;
	ld.global.nc.f32 	%f4, [%rd17];
	ld.global.nc.f32 	%f5, [%rd17+4];
	st.global.f32 	[%rd1], %f4;
	st.global.f32 	[%rd1+4], %f5;
	add.s32 	%r52, %r41, 2;
	mov.u32 	%r53, 2;

BB0_7:
	add.s32 	%r43, %r52, %r8;
	mul.wide.s32 	%rd18, %r43, 4;
	add.s64 	%rd19, %rd2, %rd18;
	ld.global.nc.f32 	%f6, [%rd19];
	mul.wide.s32 	%rd20, %r53, 4;
	add.s64 	%rd25, %rd1, %rd20;
	st.global.f32 	[%rd25], %f6;
	setp.lt.u32	%p12, %r15, 4;
	@%p12 bra 	BB0_10;

	add.s32 	%r54, %r52, 1;
	mad.lo.s32 	%r47, %r24, %r7, %r3;
	mad.lo.s32 	%r48, %r23, %r47, %r52;
	mul.wide.s32 	%rd22, %r48, 4;
	add.s64 	%rd27, %rd2, %rd22;
	add.s32 	%r49, %r53, 4;
	mul.wide.s32 	%rd23, %r49, 4;
	add.s64 	%rd26, %rd1, %rd23;

BB0_9:
	ld.global.nc.f32 	%f7, [%rd27+4];
	ld.global.nc.f32 	%f8, [%rd27+8];
	ld.global.nc.f32 	%f9, [%rd27+12];
	ld.global.nc.f32 	%f10, [%rd27+16];
	st.global.f32 	[%rd25+4], %f7;
	st.global.f32 	[%rd25+8], %f8;
	st.global.f32 	[%rd25+12], %f9;
	add.s64 	%rd27, %rd27, 16;
	st.global.f32 	[%rd26], %f10;
	add.s64 	%rd26, %rd26, 16;
	add.s64 	%rd25, %rd25, 16;
	add.s32 	%r54, %r54, 4;
	setp.lt.s32	%p13, %r54, %r13;
	@%p13 bra 	BB0_9;

BB0_10:
	ret;
}


`
   avgDWWidth_ptx_70 = `
.version 6.4
.target sm_70
.address_size 64

	// .globl	avgDWWidth

.visible .entry avgDWWidth(
	.param .u64 avgDWWidth_param_0,
	.param .u64 avgDWWidth_param_1,
	.param .u32 avgDWWidth_param_2,
	.param .u32 avgDWWidth_param_3,
	.param .u32 avgDWWidth_param_4,
	.param .u32 avgDWWidth_param_5
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<55>;
	.reg .b64 	%rd<28>;


	ld.param.u64 	%rd12, [avgDWWidth_param_0];
	ld.param.u64 	%rd13, [avgDWWidth_param_1];
	ld.param.u32 	%r22, [avgDWWidth_param_2];
	ld.param.u32 	%r23, [avgDWWidth_param_3];
	ld.param.u32 	%r24, [avgDWWidth_param_4];
	ld.param.u32 	%r25, [avgDWWidth_param_5];
	cvta.to.global.u64 	%rd1, %rd12;
	cvta.to.global.u64 	%rd2, %rd13;
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %ctaid.x;
	mul.lo.s32 	%r28, %r26, %r27;
	mov.u32 	%r29, %ntid.y;
	mov.u32 	%r1, %ctaid.y;
	mov.u32 	%r2, %tid.y;
	mad.lo.s32 	%r3, %r29, %r1, %r2;
	mov.u32 	%r4, %ntid.z;
	mov.u32 	%r5, %ctaid.z;
	mov.u32 	%r6, %tid.z;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r30, %tid.x;
	neg.s32 	%r31, %r30;
	setp.ge.s32	%p1, %r3, %r24;
	setp.ne.s32	%p2, %r28, %r31;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r7, %r25;
	or.pred  	%p5, %p3, %p4;
	or.b32  	%r32, %r7, %r3;
	setp.ne.s32	%p6, %r32, 0;
	or.pred  	%p7, %p6, %p5;
	@%p7 bra 	BB0_10;

	mad.lo.s32 	%r33, %r7, %r24, %r3;
	mul.lo.s32 	%r8, %r33, %r23;
	mov.u32 	%r50, %r23;

BB0_2:
	add.s32 	%r10, %r50, -1;
	mov.u32 	%r51, -1;
	setp.lt.s32	%p8, %r10, 2;
	@%p8 bra 	BB0_4;

	add.s32 	%r35, %r50, %r8;
	mul.wide.s32 	%rd14, %r35, 4;
	add.s64 	%rd15, %rd2, %rd14;
	add.s32 	%r51, %r50, -2;
	ld.global.nc.f32 	%f1, [%rd15+-8];
	ld.global.nc.f32 	%f2, [%rd15+-4];
	mul.f32 	%f3, %f2, %f1;
	setp.geu.f32	%p9, %f3, 0f00000000;
	mov.u32 	%r50, %r10;
	@%p9 bra 	BB0_2;

BB0_4:
	add.s32 	%r36, %r22, %r51;
	add.s32 	%r13, %r36, 1;
	sub.s32 	%r52, %r51, %r22;
	setp.ge.s32	%p10, %r52, %r13;
	@%p10 bra 	BB0_10;

	shl.b32 	%r38, %r22, 1;
	add.s32 	%r15, %r38, 1;
	and.b32  	%r39, %r15, 3;
	setp.eq.s32	%p11, %r39, 1;
	mov.u32 	%r53, 0;
	@%p11 bra 	BB0_7;

	sub.s32 	%r41, %r51, %r22;
	add.s32 	%r42, %r41, %r8;
	mul.wide.s32 	%rd16, %r42, 4;
	add.s64 	%rd17, %rd2, %rd16;
	ld.global.nc.f32 	%f4, [%rd17];
	ld.global.nc.f32 	%f5, [%rd17+4];
	st.global.f32 	[%rd1], %f4;
	st.global.f32 	[%rd1+4], %f5;
	add.s32 	%r52, %r41, 2;
	mov.u32 	%r53, 2;

BB0_7:
	add.s32 	%r43, %r52, %r8;
	mul.wide.s32 	%rd18, %r43, 4;
	add.s64 	%rd19, %rd2, %rd18;
	ld.global.nc.f32 	%f6, [%rd19];
	mul.wide.s32 	%rd20, %r53, 4;
	add.s64 	%rd25, %rd1, %rd20;
	st.global.f32 	[%rd25], %f6;
	setp.lt.u32	%p12, %r15, 4;
	@%p12 bra 	BB0_10;

	add.s32 	%r54, %r52, 1;
	mad.lo.s32 	%r47, %r24, %r7, %r3;
	mad.lo.s32 	%r48, %r23, %r47, %r52;
	mul.wide.s32 	%rd22, %r48, 4;
	add.s64 	%rd27, %rd2, %rd22;
	add.s32 	%r49, %r53, 4;
	mul.wide.s32 	%rd23, %r49, 4;
	add.s64 	%rd26, %rd1, %rd23;

BB0_9:
	ld.global.nc.f32 	%f7, [%rd27+4];
	ld.global.nc.f32 	%f8, [%rd27+8];
	ld.global.nc.f32 	%f9, [%rd27+12];
	ld.global.nc.f32 	%f10, [%rd27+16];
	st.global.f32 	[%rd25+4], %f7;
	st.global.f32 	[%rd25+8], %f8;
	st.global.f32 	[%rd25+12], %f9;
	add.s64 	%rd27, %rd27, 16;
	st.global.f32 	[%rd26], %f10;
	add.s64 	%rd26, %rd26, 16;
	add.s64 	%rd25, %rd25, 16;
	add.s32 	%r54, %r54, 4;
	setp.lt.s32	%p13, %r54, %r13;
	@%p13 bra 	BB0_9;

BB0_10:
	ret;
}


`
   avgDWWidth_ptx_75 = `
.version 6.4
.target sm_75
.address_size 64

	// .globl	avgDWWidth

.visible .entry avgDWWidth(
	.param .u64 avgDWWidth_param_0,
	.param .u64 avgDWWidth_param_1,
	.param .u32 avgDWWidth_param_2,
	.param .u32 avgDWWidth_param_3,
	.param .u32 avgDWWidth_param_4,
	.param .u32 avgDWWidth_param_5
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<55>;
	.reg .b64 	%rd<28>;


	ld.param.u64 	%rd12, [avgDWWidth_param_0];
	ld.param.u64 	%rd13, [avgDWWidth_param_1];
	ld.param.u32 	%r22, [avgDWWidth_param_2];
	ld.param.u32 	%r23, [avgDWWidth_param_3];
	ld.param.u32 	%r24, [avgDWWidth_param_4];
	ld.param.u32 	%r25, [avgDWWidth_param_5];
	cvta.to.global.u64 	%rd1, %rd12;
	cvta.to.global.u64 	%rd2, %rd13;
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %ctaid.x;
	mul.lo.s32 	%r28, %r26, %r27;
	mov.u32 	%r29, %ntid.y;
	mov.u32 	%r1, %ctaid.y;
	mov.u32 	%r2, %tid.y;
	mad.lo.s32 	%r3, %r29, %r1, %r2;
	mov.u32 	%r4, %ntid.z;
	mov.u32 	%r5, %ctaid.z;
	mov.u32 	%r6, %tid.z;
	mad.lo.s32 	%r7, %r4, %r5, %r6;
	mov.u32 	%r30, %tid.x;
	neg.s32 	%r31, %r30;
	setp.ge.s32	%p1, %r3, %r24;
	setp.ne.s32	%p2, %r28, %r31;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r7, %r25;
	or.pred  	%p5, %p3, %p4;
	or.b32  	%r32, %r7, %r3;
	setp.ne.s32	%p6, %r32, 0;
	or.pred  	%p7, %p6, %p5;
	@%p7 bra 	BB0_10;

	mad.lo.s32 	%r33, %r7, %r24, %r3;
	mul.lo.s32 	%r8, %r33, %r23;
	mov.u32 	%r50, %r23;

BB0_2:
	add.s32 	%r10, %r50, -1;
	mov.u32 	%r51, -1;
	setp.lt.s32	%p8, %r10, 2;
	@%p8 bra 	BB0_4;

	add.s32 	%r35, %r50, %r8;
	mul.wide.s32 	%rd14, %r35, 4;
	add.s64 	%rd15, %rd2, %rd14;
	add.s32 	%r51, %r50, -2;
	ld.global.nc.f32 	%f1, [%rd15+-8];
	ld.global.nc.f32 	%f2, [%rd15+-4];
	mul.f32 	%f3, %f2, %f1;
	setp.geu.f32	%p9, %f3, 0f00000000;
	mov.u32 	%r50, %r10;
	@%p9 bra 	BB0_2;

BB0_4:
	add.s32 	%r36, %r22, %r51;
	add.s32 	%r13, %r36, 1;
	sub.s32 	%r52, %r51, %r22;
	setp.ge.s32	%p10, %r52, %r13;
	@%p10 bra 	BB0_10;

	shl.b32 	%r38, %r22, 1;
	add.s32 	%r15, %r38, 1;
	and.b32  	%r39, %r15, 3;
	setp.eq.s32	%p11, %r39, 1;
	mov.u32 	%r53, 0;
	@%p11 bra 	BB0_7;

	sub.s32 	%r41, %r51, %r22;
	add.s32 	%r42, %r41, %r8;
	mul.wide.s32 	%rd16, %r42, 4;
	add.s64 	%rd17, %rd2, %rd16;
	ld.global.nc.f32 	%f4, [%rd17];
	ld.global.nc.f32 	%f5, [%rd17+4];
	st.global.f32 	[%rd1], %f4;
	st.global.f32 	[%rd1+4], %f5;
	add.s32 	%r52, %r41, 2;
	mov.u32 	%r53, 2;

BB0_7:
	add.s32 	%r43, %r52, %r8;
	mul.wide.s32 	%rd18, %r43, 4;
	add.s64 	%rd19, %rd2, %rd18;
	ld.global.nc.f32 	%f6, [%rd19];
	mul.wide.s32 	%rd20, %r53, 4;
	add.s64 	%rd25, %rd1, %rd20;
	st.global.f32 	[%rd25], %f6;
	setp.lt.u32	%p12, %r15, 4;
	@%p12 bra 	BB0_10;

	add.s32 	%r54, %r52, 1;
	mad.lo.s32 	%r47, %r24, %r7, %r3;
	mad.lo.s32 	%r48, %r23, %r47, %r52;
	mul.wide.s32 	%rd22, %r48, 4;
	add.s64 	%rd27, %rd2, %rd22;
	add.s32 	%r49, %r53, 4;
	mul.wide.s32 	%rd23, %r49, 4;
	add.s64 	%rd26, %rd1, %rd23;

BB0_9:
	ld.global.nc.f32 	%f7, [%rd27+4];
	ld.global.nc.f32 	%f8, [%rd27+8];
	ld.global.nc.f32 	%f9, [%rd27+12];
	ld.global.nc.f32 	%f10, [%rd27+16];
	st.global.f32 	[%rd25+4], %f7;
	st.global.f32 	[%rd25+8], %f8;
	st.global.f32 	[%rd25+12], %f9;
	add.s64 	%rd27, %rd27, 16;
	st.global.f32 	[%rd26], %f10;
	add.s64 	%rd26, %rd26, 16;
	add.s64 	%rd25, %rd25, 16;
	add.s32 	%r54, %r54, 4;
	setp.lt.s32	%p13, %r54, %r13;
	@%p13 bra 	BB0_9;

BB0_10:
	ret;
}


`
 )

package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import(
	"unsafe"
	"github.com/mumax/3/cuda/cu"
	"github.com/mumax/3/timer"
	"sync"
)

// CUDA handle for subDivAngle kernel
var subDivAngle_code cu.Function

// Stores the arguments for subDivAngle kernel invocation
type subDivAngle_args_t struct{
	 arg_s unsafe.Pointer
	 arg_a unsafe.Pointer
	 arg_b unsafe.Pointer
	 arg_shift int
	 arg_dt float32
	 arg_Nx int
	 arg_Ny int
	 arg_Nz int
	 argptr [8]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for subDivAngle kernel invocation
var subDivAngle_args subDivAngle_args_t

func init(){
	// CUDA driver kernel call wants pointers to arguments, set them up once.
	 subDivAngle_args.argptr[0] = unsafe.Pointer(&subDivAngle_args.arg_s)
	 subDivAngle_args.argptr[1] = unsafe.Pointer(&subDivAngle_args.arg_a)
	 subDivAngle_args.argptr[2] = unsafe.Pointer(&subDivAngle_args.arg_b)
	 subDivAngle_args.argptr[3] = unsafe.Pointer(&subDivAngle_args.arg_shift)
	 subDivAngle_args.argptr[4] = unsafe.Pointer(&subDivAngle_args.arg_dt)
	 subDivAngle_args.argptr[5] = unsafe.Pointer(&subDivAngle_args.arg_Nx)
	 subDivAngle_args.argptr[6] = unsafe.Pointer(&subDivAngle_args.arg_Ny)
	 subDivAngle_args.argptr[7] = unsafe.Pointer(&subDivAngle_args.arg_Nz)
	 }

// Wrapper for subDivAngle CUDA kernel, asynchronous.
func k_subDivAngle_async ( s unsafe.Pointer, a unsafe.Pointer, b unsafe.Pointer, shift int, dt float32, Nx int, Ny int, Nz int,  cfg *config) {
	if Synchronous{ // debug
		Sync()
		timer.Start("subDivAngle")
	}

	subDivAngle_args.Lock()
	defer subDivAngle_args.Unlock()

	if subDivAngle_code == 0{
		subDivAngle_code = fatbinLoad(subDivAngle_map, "subDivAngle")
	}

	 subDivAngle_args.arg_s = s
	 subDivAngle_args.arg_a = a
	 subDivAngle_args.arg_b = b
	 subDivAngle_args.arg_shift = shift
	 subDivAngle_args.arg_dt = dt
	 subDivAngle_args.arg_Nx = Nx
	 subDivAngle_args.arg_Ny = Ny
	 subDivAngle_args.arg_Nz = Nz
	

	args := subDivAngle_args.argptr[:]
	cu.LaunchKernel(subDivAngle_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, stream0, args)

	if Synchronous{ // debug
		Sync()
		timer.Stop("subDivAngle")
	}
}

// maps compute capability on PTX code for subDivAngle kernel.
var subDivAngle_map = map[int]string{ 0: "" ,
30: subDivAngle_ptx_30 ,
35: subDivAngle_ptx_35 ,
37: subDivAngle_ptx_37 ,
50: subDivAngle_ptx_50 ,
52: subDivAngle_ptx_52 ,
53: subDivAngle_ptx_53 ,
60: subDivAngle_ptx_60 ,
61: subDivAngle_ptx_61 ,
70: subDivAngle_ptx_70 ,
75: subDivAngle_ptx_75  }

// subDivAngle PTX code for various compute capabilities.
const(
  subDivAngle_ptx_30 = `
.version 6.4
.target sm_30
.address_size 64

	// .globl	subDivAngle

.visible .entry subDivAngle(
	.param .u64 subDivAngle_param_0,
	.param .u64 subDivAngle_param_1,
	.param .u64 subDivAngle_param_2,
	.param .u32 subDivAngle_param_3,
	.param .f32 subDivAngle_param_4,
	.param .u32 subDivAngle_param_5,
	.param .u32 subDivAngle_param_6,
	.param .u32 subDivAngle_param_7
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [subDivAngle_param_0];
	ld.param.u64 	%rd3, [subDivAngle_param_1];
	ld.param.u64 	%rd4, [subDivAngle_param_2];
	ld.param.u32 	%r7, [subDivAngle_param_3];
	ld.param.f32 	%f5, [subDivAngle_param_4];
	ld.param.u32 	%r8, [subDivAngle_param_5];
	ld.param.u32 	%r9, [subDivAngle_param_6];
	ld.param.u32 	%r10, [subDivAngle_param_7];
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	mov.u32 	%r14, %ntid.y;
	mov.u32 	%r15, %ctaid.y;
	mov.u32 	%r16, %tid.y;
	mad.lo.s32 	%r2, %r14, %r15, %r16;
	mov.u32 	%r17, %ntid.z;
	mov.u32 	%r18, %ctaid.z;
	mov.u32 	%r19, %tid.z;
	mad.lo.s32 	%r3, %r17, %r18, %r19;
	setp.ge.s32	%p1, %r2, %r9;
	setp.ge.s32	%p2, %r1, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r10;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_8;

	cvta.to.global.u64 	%rd5, %rd2;
	add.s32 	%r4, %r1, %r7;
	setp.lt.s32	%p6, %r4, %r8;
	setp.gt.s32	%p7, %r4, -1;
	and.pred  	%p8, %p6, %p7;
	mad.lo.s32 	%r20, %r3, %r9, %r2;
	mul.lo.s32 	%r5, %r20, %r8;
	add.s32 	%r6, %r5, %r1;
	mul.wide.s32 	%rd6, %r6, 4;
	add.s64 	%rd1, %rd5, %rd6;
	@%p8 bra 	BB0_3;
	bra.uni 	BB0_2;

BB0_3:
	cvta.to.global.u64 	%rd7, %rd4;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd10, %rd8, %rd6;
	add.s32 	%r22, %r5, %r4;
	mul.wide.s32 	%rd11, %r22, 4;
	add.s64 	%rd12, %rd7, %rd11;
	ld.global.f32 	%f6, [%rd12];
	ld.global.f32 	%f7, [%rd10];
	sub.f32 	%f10, %f7, %f6;
	setp.lt.f32	%p9, %f10, 0fC0490FDB;
	@%p9 bra 	BB0_6;
	bra.uni 	BB0_4;

BB0_6:
	add.f32 	%f10, %f10, 0f40C90FDB;
	bra.uni 	BB0_7;

BB0_2:
	mov.u32 	%r21, 0;
	st.global.u32 	[%rd1], %r21;
	bra.uni 	BB0_8;

BB0_4:
	setp.leu.f32	%p10, %f10, 0f40490FDB;
	@%p10 bra 	BB0_7;

	mov.f32 	%f8, 0f40C90FDB;
	sub.f32 	%f10, %f8, %f10;

BB0_7:
	div.rn.f32 	%f9, %f10, %f5;
	st.global.f32 	[%rd1], %f9;

BB0_8:
	ret;
}


`
   subDivAngle_ptx_35 = `
.version 6.4
.target sm_35
.address_size 64

	// .globl	subDivAngle

.visible .entry subDivAngle(
	.param .u64 subDivAngle_param_0,
	.param .u64 subDivAngle_param_1,
	.param .u64 subDivAngle_param_2,
	.param .u32 subDivAngle_param_3,
	.param .f32 subDivAngle_param_4,
	.param .u32 subDivAngle_param_5,
	.param .u32 subDivAngle_param_6,
	.param .u32 subDivAngle_param_7
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [subDivAngle_param_0];
	ld.param.u64 	%rd3, [subDivAngle_param_1];
	ld.param.u64 	%rd4, [subDivAngle_param_2];
	ld.param.u32 	%r7, [subDivAngle_param_3];
	ld.param.f32 	%f5, [subDivAngle_param_4];
	ld.param.u32 	%r8, [subDivAngle_param_5];
	ld.param.u32 	%r9, [subDivAngle_param_6];
	ld.param.u32 	%r10, [subDivAngle_param_7];
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	mov.u32 	%r14, %ntid.y;
	mov.u32 	%r15, %ctaid.y;
	mov.u32 	%r16, %tid.y;
	mad.lo.s32 	%r2, %r14, %r15, %r16;
	mov.u32 	%r17, %ntid.z;
	mov.u32 	%r18, %ctaid.z;
	mov.u32 	%r19, %tid.z;
	mad.lo.s32 	%r3, %r17, %r18, %r19;
	setp.ge.s32	%p1, %r2, %r9;
	setp.ge.s32	%p2, %r1, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r10;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_8;

	cvta.to.global.u64 	%rd5, %rd2;
	add.s32 	%r4, %r1, %r7;
	setp.lt.s32	%p6, %r4, %r8;
	setp.gt.s32	%p7, %r4, -1;
	and.pred  	%p8, %p6, %p7;
	mad.lo.s32 	%r20, %r3, %r9, %r2;
	mul.lo.s32 	%r5, %r20, %r8;
	add.s32 	%r6, %r5, %r1;
	mul.wide.s32 	%rd6, %r6, 4;
	add.s64 	%rd1, %rd5, %rd6;
	@%p8 bra 	BB0_3;
	bra.uni 	BB0_2;

BB0_3:
	cvta.to.global.u64 	%rd7, %rd4;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd10, %rd8, %rd6;
	add.s32 	%r22, %r5, %r4;
	mul.wide.s32 	%rd11, %r22, 4;
	add.s64 	%rd12, %rd7, %rd11;
	ld.global.nc.f32 	%f6, [%rd12];
	ld.global.nc.f32 	%f7, [%rd10];
	sub.f32 	%f10, %f7, %f6;
	setp.lt.f32	%p9, %f10, 0fC0490FDB;
	@%p9 bra 	BB0_6;
	bra.uni 	BB0_4;

BB0_6:
	add.f32 	%f10, %f10, 0f40C90FDB;
	bra.uni 	BB0_7;

BB0_2:
	mov.u32 	%r21, 0;
	st.global.u32 	[%rd1], %r21;
	bra.uni 	BB0_8;

BB0_4:
	setp.leu.f32	%p10, %f10, 0f40490FDB;
	@%p10 bra 	BB0_7;

	mov.f32 	%f8, 0f40C90FDB;
	sub.f32 	%f10, %f8, %f10;

BB0_7:
	div.rn.f32 	%f9, %f10, %f5;
	st.global.f32 	[%rd1], %f9;

BB0_8:
	ret;
}


`
   subDivAngle_ptx_37 = `
.version 6.4
.target sm_37
.address_size 64

	// .globl	subDivAngle

.visible .entry subDivAngle(
	.param .u64 subDivAngle_param_0,
	.param .u64 subDivAngle_param_1,
	.param .u64 subDivAngle_param_2,
	.param .u32 subDivAngle_param_3,
	.param .f32 subDivAngle_param_4,
	.param .u32 subDivAngle_param_5,
	.param .u32 subDivAngle_param_6,
	.param .u32 subDivAngle_param_7
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [subDivAngle_param_0];
	ld.param.u64 	%rd3, [subDivAngle_param_1];
	ld.param.u64 	%rd4, [subDivAngle_param_2];
	ld.param.u32 	%r7, [subDivAngle_param_3];
	ld.param.f32 	%f5, [subDivAngle_param_4];
	ld.param.u32 	%r8, [subDivAngle_param_5];
	ld.param.u32 	%r9, [subDivAngle_param_6];
	ld.param.u32 	%r10, [subDivAngle_param_7];
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	mov.u32 	%r14, %ntid.y;
	mov.u32 	%r15, %ctaid.y;
	mov.u32 	%r16, %tid.y;
	mad.lo.s32 	%r2, %r14, %r15, %r16;
	mov.u32 	%r17, %ntid.z;
	mov.u32 	%r18, %ctaid.z;
	mov.u32 	%r19, %tid.z;
	mad.lo.s32 	%r3, %r17, %r18, %r19;
	setp.ge.s32	%p1, %r2, %r9;
	setp.ge.s32	%p2, %r1, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r10;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_8;

	cvta.to.global.u64 	%rd5, %rd2;
	add.s32 	%r4, %r1, %r7;
	setp.lt.s32	%p6, %r4, %r8;
	setp.gt.s32	%p7, %r4, -1;
	and.pred  	%p8, %p6, %p7;
	mad.lo.s32 	%r20, %r3, %r9, %r2;
	mul.lo.s32 	%r5, %r20, %r8;
	add.s32 	%r6, %r5, %r1;
	mul.wide.s32 	%rd6, %r6, 4;
	add.s64 	%rd1, %rd5, %rd6;
	@%p8 bra 	BB0_3;
	bra.uni 	BB0_2;

BB0_3:
	cvta.to.global.u64 	%rd7, %rd4;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd10, %rd8, %rd6;
	add.s32 	%r22, %r5, %r4;
	mul.wide.s32 	%rd11, %r22, 4;
	add.s64 	%rd12, %rd7, %rd11;
	ld.global.nc.f32 	%f6, [%rd12];
	ld.global.nc.f32 	%f7, [%rd10];
	sub.f32 	%f10, %f7, %f6;
	setp.lt.f32	%p9, %f10, 0fC0490FDB;
	@%p9 bra 	BB0_6;
	bra.uni 	BB0_4;

BB0_6:
	add.f32 	%f10, %f10, 0f40C90FDB;
	bra.uni 	BB0_7;

BB0_2:
	mov.u32 	%r21, 0;
	st.global.u32 	[%rd1], %r21;
	bra.uni 	BB0_8;

BB0_4:
	setp.leu.f32	%p10, %f10, 0f40490FDB;
	@%p10 bra 	BB0_7;

	mov.f32 	%f8, 0f40C90FDB;
	sub.f32 	%f10, %f8, %f10;

BB0_7:
	div.rn.f32 	%f9, %f10, %f5;
	st.global.f32 	[%rd1], %f9;

BB0_8:
	ret;
}


`
   subDivAngle_ptx_50 = `
.version 6.4
.target sm_50
.address_size 64

	// .globl	subDivAngle

.visible .entry subDivAngle(
	.param .u64 subDivAngle_param_0,
	.param .u64 subDivAngle_param_1,
	.param .u64 subDivAngle_param_2,
	.param .u32 subDivAngle_param_3,
	.param .f32 subDivAngle_param_4,
	.param .u32 subDivAngle_param_5,
	.param .u32 subDivAngle_param_6,
	.param .u32 subDivAngle_param_7
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [subDivAngle_param_0];
	ld.param.u64 	%rd3, [subDivAngle_param_1];
	ld.param.u64 	%rd4, [subDivAngle_param_2];
	ld.param.u32 	%r7, [subDivAngle_param_3];
	ld.param.f32 	%f5, [subDivAngle_param_4];
	ld.param.u32 	%r8, [subDivAngle_param_5];
	ld.param.u32 	%r9, [subDivAngle_param_6];
	ld.param.u32 	%r10, [subDivAngle_param_7];
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	mov.u32 	%r14, %ntid.y;
	mov.u32 	%r15, %ctaid.y;
	mov.u32 	%r16, %tid.y;
	mad.lo.s32 	%r2, %r14, %r15, %r16;
	mov.u32 	%r17, %ntid.z;
	mov.u32 	%r18, %ctaid.z;
	mov.u32 	%r19, %tid.z;
	mad.lo.s32 	%r3, %r17, %r18, %r19;
	setp.ge.s32	%p1, %r2, %r9;
	setp.ge.s32	%p2, %r1, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r10;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_8;

	cvta.to.global.u64 	%rd5, %rd2;
	add.s32 	%r4, %r1, %r7;
	setp.lt.s32	%p6, %r4, %r8;
	setp.gt.s32	%p7, %r4, -1;
	and.pred  	%p8, %p6, %p7;
	mad.lo.s32 	%r20, %r3, %r9, %r2;
	mul.lo.s32 	%r5, %r20, %r8;
	add.s32 	%r6, %r5, %r1;
	mul.wide.s32 	%rd6, %r6, 4;
	add.s64 	%rd1, %rd5, %rd6;
	@%p8 bra 	BB0_3;
	bra.uni 	BB0_2;

BB0_3:
	cvta.to.global.u64 	%rd7, %rd4;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd10, %rd8, %rd6;
	add.s32 	%r22, %r5, %r4;
	mul.wide.s32 	%rd11, %r22, 4;
	add.s64 	%rd12, %rd7, %rd11;
	ld.global.nc.f32 	%f6, [%rd12];
	ld.global.nc.f32 	%f7, [%rd10];
	sub.f32 	%f10, %f7, %f6;
	setp.lt.f32	%p9, %f10, 0fC0490FDB;
	@%p9 bra 	BB0_6;
	bra.uni 	BB0_4;

BB0_6:
	add.f32 	%f10, %f10, 0f40C90FDB;
	bra.uni 	BB0_7;

BB0_2:
	mov.u32 	%r21, 0;
	st.global.u32 	[%rd1], %r21;
	bra.uni 	BB0_8;

BB0_4:
	setp.leu.f32	%p10, %f10, 0f40490FDB;
	@%p10 bra 	BB0_7;

	mov.f32 	%f8, 0f40C90FDB;
	sub.f32 	%f10, %f8, %f10;

BB0_7:
	div.rn.f32 	%f9, %f10, %f5;
	st.global.f32 	[%rd1], %f9;

BB0_8:
	ret;
}


`
   subDivAngle_ptx_52 = `
.version 6.4
.target sm_52
.address_size 64

	// .globl	subDivAngle

.visible .entry subDivAngle(
	.param .u64 subDivAngle_param_0,
	.param .u64 subDivAngle_param_1,
	.param .u64 subDivAngle_param_2,
	.param .u32 subDivAngle_param_3,
	.param .f32 subDivAngle_param_4,
	.param .u32 subDivAngle_param_5,
	.param .u32 subDivAngle_param_6,
	.param .u32 subDivAngle_param_7
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [subDivAngle_param_0];
	ld.param.u64 	%rd3, [subDivAngle_param_1];
	ld.param.u64 	%rd4, [subDivAngle_param_2];
	ld.param.u32 	%r7, [subDivAngle_param_3];
	ld.param.f32 	%f5, [subDivAngle_param_4];
	ld.param.u32 	%r8, [subDivAngle_param_5];
	ld.param.u32 	%r9, [subDivAngle_param_6];
	ld.param.u32 	%r10, [subDivAngle_param_7];
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	mov.u32 	%r14, %ntid.y;
	mov.u32 	%r15, %ctaid.y;
	mov.u32 	%r16, %tid.y;
	mad.lo.s32 	%r2, %r14, %r15, %r16;
	mov.u32 	%r17, %ntid.z;
	mov.u32 	%r18, %ctaid.z;
	mov.u32 	%r19, %tid.z;
	mad.lo.s32 	%r3, %r17, %r18, %r19;
	setp.ge.s32	%p1, %r2, %r9;
	setp.ge.s32	%p2, %r1, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r10;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_8;

	cvta.to.global.u64 	%rd5, %rd2;
	add.s32 	%r4, %r1, %r7;
	setp.lt.s32	%p6, %r4, %r8;
	setp.gt.s32	%p7, %r4, -1;
	and.pred  	%p8, %p6, %p7;
	mad.lo.s32 	%r20, %r3, %r9, %r2;
	mul.lo.s32 	%r5, %r20, %r8;
	add.s32 	%r6, %r5, %r1;
	mul.wide.s32 	%rd6, %r6, 4;
	add.s64 	%rd1, %rd5, %rd6;
	@%p8 bra 	BB0_3;
	bra.uni 	BB0_2;

BB0_3:
	cvta.to.global.u64 	%rd7, %rd4;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd10, %rd8, %rd6;
	add.s32 	%r22, %r5, %r4;
	mul.wide.s32 	%rd11, %r22, 4;
	add.s64 	%rd12, %rd7, %rd11;
	ld.global.nc.f32 	%f6, [%rd12];
	ld.global.nc.f32 	%f7, [%rd10];
	sub.f32 	%f10, %f7, %f6;
	setp.lt.f32	%p9, %f10, 0fC0490FDB;
	@%p9 bra 	BB0_6;
	bra.uni 	BB0_4;

BB0_6:
	add.f32 	%f10, %f10, 0f40C90FDB;
	bra.uni 	BB0_7;

BB0_2:
	mov.u32 	%r21, 0;
	st.global.u32 	[%rd1], %r21;
	bra.uni 	BB0_8;

BB0_4:
	setp.leu.f32	%p10, %f10, 0f40490FDB;
	@%p10 bra 	BB0_7;

	mov.f32 	%f8, 0f40C90FDB;
	sub.f32 	%f10, %f8, %f10;

BB0_7:
	div.rn.f32 	%f9, %f10, %f5;
	st.global.f32 	[%rd1], %f9;

BB0_8:
	ret;
}


`
   subDivAngle_ptx_53 = `
.version 6.4
.target sm_53
.address_size 64

	// .globl	subDivAngle

.visible .entry subDivAngle(
	.param .u64 subDivAngle_param_0,
	.param .u64 subDivAngle_param_1,
	.param .u64 subDivAngle_param_2,
	.param .u32 subDivAngle_param_3,
	.param .f32 subDivAngle_param_4,
	.param .u32 subDivAngle_param_5,
	.param .u32 subDivAngle_param_6,
	.param .u32 subDivAngle_param_7
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [subDivAngle_param_0];
	ld.param.u64 	%rd3, [subDivAngle_param_1];
	ld.param.u64 	%rd4, [subDivAngle_param_2];
	ld.param.u32 	%r7, [subDivAngle_param_3];
	ld.param.f32 	%f5, [subDivAngle_param_4];
	ld.param.u32 	%r8, [subDivAngle_param_5];
	ld.param.u32 	%r9, [subDivAngle_param_6];
	ld.param.u32 	%r10, [subDivAngle_param_7];
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	mov.u32 	%r14, %ntid.y;
	mov.u32 	%r15, %ctaid.y;
	mov.u32 	%r16, %tid.y;
	mad.lo.s32 	%r2, %r14, %r15, %r16;
	mov.u32 	%r17, %ntid.z;
	mov.u32 	%r18, %ctaid.z;
	mov.u32 	%r19, %tid.z;
	mad.lo.s32 	%r3, %r17, %r18, %r19;
	setp.ge.s32	%p1, %r2, %r9;
	setp.ge.s32	%p2, %r1, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r10;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_8;

	cvta.to.global.u64 	%rd5, %rd2;
	add.s32 	%r4, %r1, %r7;
	setp.lt.s32	%p6, %r4, %r8;
	setp.gt.s32	%p7, %r4, -1;
	and.pred  	%p8, %p6, %p7;
	mad.lo.s32 	%r20, %r3, %r9, %r2;
	mul.lo.s32 	%r5, %r20, %r8;
	add.s32 	%r6, %r5, %r1;
	mul.wide.s32 	%rd6, %r6, 4;
	add.s64 	%rd1, %rd5, %rd6;
	@%p8 bra 	BB0_3;
	bra.uni 	BB0_2;

BB0_3:
	cvta.to.global.u64 	%rd7, %rd4;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd10, %rd8, %rd6;
	add.s32 	%r22, %r5, %r4;
	mul.wide.s32 	%rd11, %r22, 4;
	add.s64 	%rd12, %rd7, %rd11;
	ld.global.nc.f32 	%f6, [%rd12];
	ld.global.nc.f32 	%f7, [%rd10];
	sub.f32 	%f10, %f7, %f6;
	setp.lt.f32	%p9, %f10, 0fC0490FDB;
	@%p9 bra 	BB0_6;
	bra.uni 	BB0_4;

BB0_6:
	add.f32 	%f10, %f10, 0f40C90FDB;
	bra.uni 	BB0_7;

BB0_2:
	mov.u32 	%r21, 0;
	st.global.u32 	[%rd1], %r21;
	bra.uni 	BB0_8;

BB0_4:
	setp.leu.f32	%p10, %f10, 0f40490FDB;
	@%p10 bra 	BB0_7;

	mov.f32 	%f8, 0f40C90FDB;
	sub.f32 	%f10, %f8, %f10;

BB0_7:
	div.rn.f32 	%f9, %f10, %f5;
	st.global.f32 	[%rd1], %f9;

BB0_8:
	ret;
}


`
   subDivAngle_ptx_60 = `
.version 6.4
.target sm_60
.address_size 64

	// .globl	subDivAngle

.visible .entry subDivAngle(
	.param .u64 subDivAngle_param_0,
	.param .u64 subDivAngle_param_1,
	.param .u64 subDivAngle_param_2,
	.param .u32 subDivAngle_param_3,
	.param .f32 subDivAngle_param_4,
	.param .u32 subDivAngle_param_5,
	.param .u32 subDivAngle_param_6,
	.param .u32 subDivAngle_param_7
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [subDivAngle_param_0];
	ld.param.u64 	%rd3, [subDivAngle_param_1];
	ld.param.u64 	%rd4, [subDivAngle_param_2];
	ld.param.u32 	%r7, [subDivAngle_param_3];
	ld.param.f32 	%f5, [subDivAngle_param_4];
	ld.param.u32 	%r8, [subDivAngle_param_5];
	ld.param.u32 	%r9, [subDivAngle_param_6];
	ld.param.u32 	%r10, [subDivAngle_param_7];
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	mov.u32 	%r14, %ntid.y;
	mov.u32 	%r15, %ctaid.y;
	mov.u32 	%r16, %tid.y;
	mad.lo.s32 	%r2, %r14, %r15, %r16;
	mov.u32 	%r17, %ntid.z;
	mov.u32 	%r18, %ctaid.z;
	mov.u32 	%r19, %tid.z;
	mad.lo.s32 	%r3, %r17, %r18, %r19;
	setp.ge.s32	%p1, %r2, %r9;
	setp.ge.s32	%p2, %r1, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r10;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_8;

	cvta.to.global.u64 	%rd5, %rd2;
	add.s32 	%r4, %r1, %r7;
	setp.lt.s32	%p6, %r4, %r8;
	setp.gt.s32	%p7, %r4, -1;
	and.pred  	%p8, %p6, %p7;
	mad.lo.s32 	%r20, %r3, %r9, %r2;
	mul.lo.s32 	%r5, %r20, %r8;
	add.s32 	%r6, %r5, %r1;
	mul.wide.s32 	%rd6, %r6, 4;
	add.s64 	%rd1, %rd5, %rd6;
	@%p8 bra 	BB0_3;
	bra.uni 	BB0_2;

BB0_3:
	cvta.to.global.u64 	%rd7, %rd4;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd10, %rd8, %rd6;
	add.s32 	%r22, %r5, %r4;
	mul.wide.s32 	%rd11, %r22, 4;
	add.s64 	%rd12, %rd7, %rd11;
	ld.global.nc.f32 	%f6, [%rd12];
	ld.global.nc.f32 	%f7, [%rd10];
	sub.f32 	%f10, %f7, %f6;
	setp.lt.f32	%p9, %f10, 0fC0490FDB;
	@%p9 bra 	BB0_6;
	bra.uni 	BB0_4;

BB0_6:
	add.f32 	%f10, %f10, 0f40C90FDB;
	bra.uni 	BB0_7;

BB0_2:
	mov.u32 	%r21, 0;
	st.global.u32 	[%rd1], %r21;
	bra.uni 	BB0_8;

BB0_4:
	setp.leu.f32	%p10, %f10, 0f40490FDB;
	@%p10 bra 	BB0_7;

	mov.f32 	%f8, 0f40C90FDB;
	sub.f32 	%f10, %f8, %f10;

BB0_7:
	div.rn.f32 	%f9, %f10, %f5;
	st.global.f32 	[%rd1], %f9;

BB0_8:
	ret;
}


`
   subDivAngle_ptx_61 = `
.version 6.4
.target sm_61
.address_size 64

	// .globl	subDivAngle

.visible .entry subDivAngle(
	.param .u64 subDivAngle_param_0,
	.param .u64 subDivAngle_param_1,
	.param .u64 subDivAngle_param_2,
	.param .u32 subDivAngle_param_3,
	.param .f32 subDivAngle_param_4,
	.param .u32 subDivAngle_param_5,
	.param .u32 subDivAngle_param_6,
	.param .u32 subDivAngle_param_7
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [subDivAngle_param_0];
	ld.param.u64 	%rd3, [subDivAngle_param_1];
	ld.param.u64 	%rd4, [subDivAngle_param_2];
	ld.param.u32 	%r7, [subDivAngle_param_3];
	ld.param.f32 	%f5, [subDivAngle_param_4];
	ld.param.u32 	%r8, [subDivAngle_param_5];
	ld.param.u32 	%r9, [subDivAngle_param_6];
	ld.param.u32 	%r10, [subDivAngle_param_7];
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	mov.u32 	%r14, %ntid.y;
	mov.u32 	%r15, %ctaid.y;
	mov.u32 	%r16, %tid.y;
	mad.lo.s32 	%r2, %r14, %r15, %r16;
	mov.u32 	%r17, %ntid.z;
	mov.u32 	%r18, %ctaid.z;
	mov.u32 	%r19, %tid.z;
	mad.lo.s32 	%r3, %r17, %r18, %r19;
	setp.ge.s32	%p1, %r2, %r9;
	setp.ge.s32	%p2, %r1, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r10;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_8;

	cvta.to.global.u64 	%rd5, %rd2;
	add.s32 	%r4, %r1, %r7;
	setp.lt.s32	%p6, %r4, %r8;
	setp.gt.s32	%p7, %r4, -1;
	and.pred  	%p8, %p6, %p7;
	mad.lo.s32 	%r20, %r3, %r9, %r2;
	mul.lo.s32 	%r5, %r20, %r8;
	add.s32 	%r6, %r5, %r1;
	mul.wide.s32 	%rd6, %r6, 4;
	add.s64 	%rd1, %rd5, %rd6;
	@%p8 bra 	BB0_3;
	bra.uni 	BB0_2;

BB0_3:
	cvta.to.global.u64 	%rd7, %rd4;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd10, %rd8, %rd6;
	add.s32 	%r22, %r5, %r4;
	mul.wide.s32 	%rd11, %r22, 4;
	add.s64 	%rd12, %rd7, %rd11;
	ld.global.nc.f32 	%f6, [%rd12];
	ld.global.nc.f32 	%f7, [%rd10];
	sub.f32 	%f10, %f7, %f6;
	setp.lt.f32	%p9, %f10, 0fC0490FDB;
	@%p9 bra 	BB0_6;
	bra.uni 	BB0_4;

BB0_6:
	add.f32 	%f10, %f10, 0f40C90FDB;
	bra.uni 	BB0_7;

BB0_2:
	mov.u32 	%r21, 0;
	st.global.u32 	[%rd1], %r21;
	bra.uni 	BB0_8;

BB0_4:
	setp.leu.f32	%p10, %f10, 0f40490FDB;
	@%p10 bra 	BB0_7;

	mov.f32 	%f8, 0f40C90FDB;
	sub.f32 	%f10, %f8, %f10;

BB0_7:
	div.rn.f32 	%f9, %f10, %f5;
	st.global.f32 	[%rd1], %f9;

BB0_8:
	ret;
}


`
   subDivAngle_ptx_70 = `
.version 6.4
.target sm_70
.address_size 64

	// .globl	subDivAngle

.visible .entry subDivAngle(
	.param .u64 subDivAngle_param_0,
	.param .u64 subDivAngle_param_1,
	.param .u64 subDivAngle_param_2,
	.param .u32 subDivAngle_param_3,
	.param .f32 subDivAngle_param_4,
	.param .u32 subDivAngle_param_5,
	.param .u32 subDivAngle_param_6,
	.param .u32 subDivAngle_param_7
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [subDivAngle_param_0];
	ld.param.u64 	%rd3, [subDivAngle_param_1];
	ld.param.u64 	%rd4, [subDivAngle_param_2];
	ld.param.u32 	%r7, [subDivAngle_param_3];
	ld.param.f32 	%f5, [subDivAngle_param_4];
	ld.param.u32 	%r8, [subDivAngle_param_5];
	ld.param.u32 	%r9, [subDivAngle_param_6];
	ld.param.u32 	%r10, [subDivAngle_param_7];
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	mov.u32 	%r14, %ntid.y;
	mov.u32 	%r15, %ctaid.y;
	mov.u32 	%r16, %tid.y;
	mad.lo.s32 	%r2, %r14, %r15, %r16;
	mov.u32 	%r17, %ntid.z;
	mov.u32 	%r18, %ctaid.z;
	mov.u32 	%r19, %tid.z;
	mad.lo.s32 	%r3, %r17, %r18, %r19;
	setp.ge.s32	%p1, %r2, %r9;
	setp.ge.s32	%p2, %r1, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r10;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_8;

	cvta.to.global.u64 	%rd5, %rd2;
	add.s32 	%r4, %r1, %r7;
	setp.lt.s32	%p6, %r4, %r8;
	setp.gt.s32	%p7, %r4, -1;
	and.pred  	%p8, %p6, %p7;
	mad.lo.s32 	%r20, %r3, %r9, %r2;
	mul.lo.s32 	%r5, %r20, %r8;
	add.s32 	%r6, %r5, %r1;
	mul.wide.s32 	%rd6, %r6, 4;
	add.s64 	%rd1, %rd5, %rd6;
	@%p8 bra 	BB0_3;
	bra.uni 	BB0_2;

BB0_3:
	cvta.to.global.u64 	%rd7, %rd4;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd10, %rd8, %rd6;
	add.s32 	%r22, %r5, %r4;
	mul.wide.s32 	%rd11, %r22, 4;
	add.s64 	%rd12, %rd7, %rd11;
	ld.global.nc.f32 	%f6, [%rd12];
	ld.global.nc.f32 	%f7, [%rd10];
	sub.f32 	%f10, %f7, %f6;
	setp.lt.f32	%p9, %f10, 0fC0490FDB;
	@%p9 bra 	BB0_6;
	bra.uni 	BB0_4;

BB0_6:
	add.f32 	%f10, %f10, 0f40C90FDB;
	bra.uni 	BB0_7;

BB0_2:
	mov.u32 	%r21, 0;
	st.global.u32 	[%rd1], %r21;
	bra.uni 	BB0_8;

BB0_4:
	setp.leu.f32	%p10, %f10, 0f40490FDB;
	@%p10 bra 	BB0_7;

	mov.f32 	%f8, 0f40C90FDB;
	sub.f32 	%f10, %f8, %f10;

BB0_7:
	div.rn.f32 	%f9, %f10, %f5;
	st.global.f32 	[%rd1], %f9;

BB0_8:
	ret;
}


`
   subDivAngle_ptx_75 = `
.version 6.4
.target sm_75
.address_size 64

	// .globl	subDivAngle

.visible .entry subDivAngle(
	.param .u64 subDivAngle_param_0,
	.param .u64 subDivAngle_param_1,
	.param .u64 subDivAngle_param_2,
	.param .u32 subDivAngle_param_3,
	.param .f32 subDivAngle_param_4,
	.param .u32 subDivAngle_param_5,
	.param .u32 subDivAngle_param_6,
	.param .u32 subDivAngle_param_7
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [subDivAngle_param_0];
	ld.param.u64 	%rd3, [subDivAngle_param_1];
	ld.param.u64 	%rd4, [subDivAngle_param_2];
	ld.param.u32 	%r7, [subDivAngle_param_3];
	ld.param.f32 	%f5, [subDivAngle_param_4];
	ld.param.u32 	%r8, [subDivAngle_param_5];
	ld.param.u32 	%r9, [subDivAngle_param_6];
	ld.param.u32 	%r10, [subDivAngle_param_7];
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	mov.u32 	%r14, %ntid.y;
	mov.u32 	%r15, %ctaid.y;
	mov.u32 	%r16, %tid.y;
	mad.lo.s32 	%r2, %r14, %r15, %r16;
	mov.u32 	%r17, %ntid.z;
	mov.u32 	%r18, %ctaid.z;
	mov.u32 	%r19, %tid.z;
	mad.lo.s32 	%r3, %r17, %r18, %r19;
	setp.ge.s32	%p1, %r2, %r9;
	setp.ge.s32	%p2, %r1, %r8;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r10;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_8;

	cvta.to.global.u64 	%rd5, %rd2;
	add.s32 	%r4, %r1, %r7;
	setp.lt.s32	%p6, %r4, %r8;
	setp.gt.s32	%p7, %r4, -1;
	and.pred  	%p8, %p6, %p7;
	mad.lo.s32 	%r20, %r3, %r9, %r2;
	mul.lo.s32 	%r5, %r20, %r8;
	add.s32 	%r6, %r5, %r1;
	mul.wide.s32 	%rd6, %r6, 4;
	add.s64 	%rd1, %rd5, %rd6;
	@%p8 bra 	BB0_3;
	bra.uni 	BB0_2;

BB0_3:
	cvta.to.global.u64 	%rd7, %rd4;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd10, %rd8, %rd6;
	add.s32 	%r22, %r5, %r4;
	mul.wide.s32 	%rd11, %r22, 4;
	add.s64 	%rd12, %rd7, %rd11;
	ld.global.nc.f32 	%f6, [%rd12];
	ld.global.nc.f32 	%f7, [%rd10];
	sub.f32 	%f10, %f7, %f6;
	setp.lt.f32	%p9, %f10, 0fC0490FDB;
	@%p9 bra 	BB0_6;
	bra.uni 	BB0_4;

BB0_6:
	add.f32 	%f10, %f10, 0f40C90FDB;
	bra.uni 	BB0_7;

BB0_2:
	mov.u32 	%r21, 0;
	st.global.u32 	[%rd1], %r21;
	bra.uni 	BB0_8;

BB0_4:
	setp.leu.f32	%p10, %f10, 0f40490FDB;
	@%p10 bra 	BB0_7;

	mov.f32 	%f8, 0f40C90FDB;
	sub.f32 	%f10, %f8, %f10;

BB0_7:
	div.rn.f32 	%f9, %f10, %f5;
	st.global.f32 	[%rd1], %f9;

BB0_8:
	ret;
}


`
 )
